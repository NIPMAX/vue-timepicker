{"version":3,"sources":["webpack:///static/js/app.7b86c713d192e7d8fe9e.js","webpack:///./demo/main.js","webpack:///./src/vue-timepicker.vue","webpack:///App.vue","webpack:///Playground.vue","webpack:///Samples.vue","webpack:///vue-timepicker.vue","webpack:///./demo/App.vue?b123","webpack:///./demo/components/Playground.vue?02a2","webpack:///./demo/components/Samples.vue?79a0","webpack:///./src/vue-timepicker.vue?1479","webpack:///./demo/App.vue","webpack:///./demo/components/Playground.vue","webpack:///./demo/components/Samples.vue"],"names":["webpackJsonp","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_vue","_vue2","_App","_App2","el","components","App","__vue_script__","__vue_template__","options","template","Object","defineProperty","value","scrollHandler","_Samples","_Samples2","_Playground","_Playground2","name","samples","playground","data","currentView","scrollTop","methods","switchView","target","this","document","body","ready","self","evt","scrollingElement","documentElement","parentNode","window","addEventListener","beforeDestroy","removeEventListener","_keys","_keys2","_vueTimepicker","_vueTimepicker2","tokens","hour","minute","second","apm","type","selected","hourRange","min","max","interval","customInterval","enableClearBtn","playgroundData","playgroundFullValue","muteWatch","computed","formatString","needApm","htmlCode","start","end","htmlCodeWithVar","newEnd","replace","refreshHighlight","yourTimeValue","code","listTimeValue","watch","deep","handler","isNeeded","custom","updateHourRange","hourType","handleOutRangeData","formatValue","String","updatePlaygroundData","toUpperCase","len","length","string","forEach","k","i","updateRangeValue","Number","toLowerCase","elm","$nextTick","hljs","highlightBlock","$els","asideStyle","initPaddingTop","minPaddingTop","paddingTop","Math","events","vue-timepicker-update","attached","initHighlightingOnLoad","yourData","hh","mm","ss","a","yourFormat","yourDaysArray","start_time","HH","end_time","muteFlowListener","latestDataFlow","undefined","demoData1","demoData2","demoArgs","refreshAllHighlight","refreshHighlightNextTick","$el","codeBlocks","querySelectorAll","Array","prototype","call","block","changeHandler","eventData","otherChangeHandler","arg1","arg2","compiled","setTimeout","_stringify","_stringify2","CONFIG","HOUR_TOKENS","MINUTE_TOKENS","SECOND_TOKENS","APM_TOKENS","props","timeValue","twoWay","hideClearButton","Boolean","format","minuteInterval","secondInterval","id","hours","minutes","seconds","apms","showDropdown","minuteType","secondType","apmType","fullValues","displayTime","RegExp","showClearBtn","newInteval","renderList","checkAcceptingType","validValues","fallbackValue","indexOf","renderFormat","newFormat","renderHoursList","renderApmList","readValues","hoursCount","push","listType","console","warn","JSON","parse","values","fillValues","baseHour","baseHourType","hourValue","baseOnTwelveHours","isTwelveHours","apmValue","token","A","minuteValue","m","secondValue","s","updateTimeValue","$dispatch","baseTimeValue","key","toggleDropdown","select","clearTime"],"mappings":"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,GJoHOxC,KAAK0C,iBInHZ,UJoHO1C,KAAK0C,iBIlHZ,aACAN,GJqHKO,cAAe,WACb,GAAIC,GIlHX,uBJyHO,OANAA,IIlHP,eJmHOA,GIlHP,yBJmHOA,GAAQ5C,KIlHf6C,gBJmHOD,GIlHP,YJmHOA,GIlHP,QJmHOA,GIlHP,MJuHGE,OACEvB,UACEwB,MIlHP,EJmHOC,QIhHP,wBJmHK1B,MACEyB,MIlHP,EJmHOC,QIhHP,wBJmHKb,QAAS,SAAiBc,GACpBA,EACGjD,KAAKuB,SAASF,MACjBrB,KAAKsB,KAAKD,IIlHrB,IJmHWrB,KAAKuB,SAASF,IIlHzB,OJqHSrB,KAAKsB,KAAKD,IIlHnB,GJmHSrB,KAAKuB,SAASF,IIlHvB,KJuHKO,gBACEmB,MInHP,EJoHOC,QAAS,SAAiBE,GACnBA,EAAO/B,SACVnB,KAAK2B,SAASR,OInHzB,GJqHc+B,EAAO9B,SACVpB,KAAK2B,SAASP,OInHzB,MJyHGvB,SACEsD,gBAAiB,SAAyBC,GACxCA,EAAWA,GAAYpD,KAAKsB,KInHnCJ,IJoHO,IAAIM,KACJ,QInHP4B,GJoHS,IInHT,IJoHS,IInHT,KJoHW5B,EAAUC,IInHrB,EJoHWD,EAAUE,IInHrB,EACA,MJoHS,KInHT,IJoHS,IInHT,KJoHWF,EAAUC,IInHrB,EJoHWD,EAAUE,IInHrB,EACA,MJoHS,KInHT,IJoHS,IInHT,KJoHWF,EAAUC,IInHrB,EJoHWD,EAAUE,IInHrB,GJsHO1B,KAAKwB,UInHZA,EJoHOxB,KInHPqD,sBJqHKA,mBAAoB,WACdrD,KAAKuB,SAASL,KAAOlB,KAAKwB,UAAUE,IACtC1B,KAAKuB,SAASL,KAAOlB,KAAKwB,UIlHnCE,IJmHkB1B,KAAKuB,SAASL,KAAOlB,KAAKwB,UAAUC,MAC7CzB,KAAKuB,SAASL,KAAOlB,KAAKwB,UIlHnCC,MJqHK6B,YAAa,SAAqBhC,EAAMrC,GACtC,OIjHPqC,GJkHS,IIjHT,IJkHS,IIjHT,IJkHS,IIjHT,IJkHS,IIjHT,IJkHS,IIjHT,IJkHW,MAAOiC,QIjHlBtE,EJkHS,KIjHT,KJkHS,IIjHT,KJkHS,I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","file":"static/js/app.7b86c713d192e7d8fe9e.js","sourcesContent":["webpackJsonp([2,0],[\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _vue = __webpack_require__(52);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _App = __webpack_require__(49);\n\t\n\tvar _App2 = _interopRequireDefault(_App);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tnew _vue2.default({\n\t  el: 'body',\n\t  components: { App: _App2.default }\n\t});\n\n/***/ },\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */,\n/* 9 */,\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(44)\n\t__vue_script__ = __webpack_require__(14)\n\t__vue_template__ = __webpack_require__(48)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _Samples = __webpack_require__(51);\n\t\n\tvar _Samples2 = _interopRequireDefault(_Samples);\n\t\n\tvar _Playground = __webpack_require__(50);\n\t\n\tvar _Playground2 = _interopRequireDefault(_Playground);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar scrollHandler;\n\t\n\texports.default = {\n\t  name: 'App',\n\t  components: {\n\t    'samples': _Samples2.default,\n\t    'playground': _Playground2.default\n\t  },\n\t\n\t  data: function data() {\n\t    return {\n\t      currentView: 'samples',\n\t      scrollTop: 0\n\t    };\n\t  },\n\t\n\t\n\t  methods: {\n\t    switchView: function switchView(target) {\n\t      this.currentView = target;\n\t      document.body.scrollTop = 0;\n\t    }\n\t  },\n\t\n\t  ready: function ready() {\n\t    var self = this;\n\t    scrollHandler = function scrollHandler(evt) {\n\t      self.scrollTop = (evt.target.scrollingElement || document.documentElement || document.body.parentNode).scrollTop || 0;\n\t    };\n\t    window.addEventListener('scroll', scrollHandler);\n\t  },\n\t  beforeDestroy: function beforeDestroy() {\n\t    window.removeEventListener('scroll', scrollHandler);\n\t  }\n\t};\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _keys = __webpack_require__(6);\n\t\n\tvar _keys2 = _interopRequireDefault(_keys);\n\t\n\tvar _vueTimepicker = __webpack_require__(10);\n\t\n\tvar _vueTimepicker2 = _interopRequireDefault(_vueTimepicker);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar scrollHandler;\n\t\n\texports.default = {\n\t  name: 'Playground',\n\t  components: [_vueTimepicker2.default],\n\t  data: function data() {\n\t    return {\n\t      tokens: {\n\t        hour: ['HH', 'H', 'hh', 'h', 'kk', 'k'],\n\t        minute: ['mm', 'm'],\n\t        second: ['ss', 's', 'none'],\n\t        apm: ['A', 'a']\n\t      },\n\t\n\t      type: {\n\t        hour: 'hh',\n\t        minute: 'mm',\n\t        second: 'ss',\n\t        apm: 'A'\n\t      },\n\t\n\t      selected: {\n\t        hour: 1,\n\t        minute: 0,\n\t        second: 0,\n\t        apm: 'am'\n\t      },\n\t\n\t      hourRange: {\n\t        min: 1,\n\t        max: 12\n\t      },\n\t\n\t      interval: {\n\t        minute: 1,\n\t        second: 1\n\t      },\n\t\n\t      customInterval: {\n\t        minute: false,\n\t        second: false\n\t      },\n\t\n\t      enableClearBtn: true,\n\t\n\t      playgroundData: {},\n\t\n\t      playgroundFullValue: {},\n\t\n\t      muteWatch: false,\n\t\n\t      scrollTop: 0\n\t    };\n\t  },\n\t\n\t\n\t  computed: {\n\t    formatString: function formatString() {\n\t      var formatString = this.type.hour + ':' + this.type.minute;\n\t      if (this.type.second !== 'none') {\n\t        formatString += ':' + this.type.second;\n\t      }\n\t      if (this.type.apm) {\n\t        formatString += ' ' + this.type.apm;\n\t      }\n\t      return formatString;\n\t    },\n\t    needApm: function needApm() {\n\t      return this.type.hour === 'h' || this.type.hour === 'hh';\n\t    },\n\t    htmlCode: function htmlCode() {\n\t      var start = '<vue-timepicker';\n\t      var end = '>\\n</vue-timepicker>';\n\t\n\t      start += ' format=\"' + this.formatString + '\"';\n\t\n\t      if (this.customInterval.minute) {\n\t        start += '\\n :minute-interval=\"' + this.interval.minute + '\"';\n\t      }\n\t\n\t      if (this.customInterval.second) {\n\t        start += '\\n :second-interval=\"' + this.interval.second + '\"';\n\t      }\n\t\n\t      if (!this.enableClearBtn) {\n\t        start += '\\n hide-clear-button';\n\t      }\n\t\n\t      return start + end;\n\t    },\n\t    htmlCodeWithVar: function htmlCodeWithVar() {\n\t      var htmlCode = this.htmlCode;\n\t      var end = '>\\n</vue-timepicker>';\n\t      var newEnd = '\\n :time-value.sync=\"yourTimeValue\">\\n</vue-timepicker>';\n\t      htmlCode = htmlCode.replace(end, newEnd);\n\t\n\t      this.refreshHighlight('pghtml');\n\t      this.refreshHighlight('pghtmlvar');\n\t\n\t      return htmlCode;\n\t    },\n\t    yourTimeValue: function yourTimeValue() {\n\t      var code = 'data: function () {\\n';\n\t      code += '  return {\\n';\n\t      code += '    yourTimeValue: {\\n';\n\t      code += this.listTimeValue();\n\t      code += '\\n    }\\n';\n\t      code += '  }\\n';\n\t      code += '}';\n\t      return code;\n\t    }\n\t  },\n\t\n\t  watch: {\n\t    'selected': {\n\t      deep: true,\n\t      handler: 'updatePlaygroundData'\n\t    },\n\t\n\t    'type': {\n\t      deep: true,\n\t      handler: 'updatePlaygroundData'\n\t    },\n\t\n\t    needApm: function needApm(isNeeded) {\n\t      if (isNeeded) {\n\t        if (!this.selected.apm) {\n\t          this.type.apm = 'A';\n\t          this.selected.apm = 'am';\n\t        }\n\t      } else {\n\t        this.type.apm = '';\n\t        this.selected.apm = '';\n\t      }\n\t    },\n\t\n\t\n\t    'customInterval': {\n\t      deep: true,\n\t      handler: function handler(custom) {\n\t        if (!custom.minute) {\n\t          this.interval.minute = 1;\n\t        }\n\t        if (!custom.second) {\n\t          this.interval.second = 1;\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  methods: {\n\t    updateHourRange: function updateHourRange(hourType) {\n\t      hourType = hourType || this.type.hour;\n\t      var hourRange = {};\n\t      switch (hourType) {\n\t        case 'h':\n\t        case 'hh':\n\t          hourRange.min = 1;\n\t          hourRange.max = 12;\n\t          break;\n\t        case 'H':\n\t        case 'HH':\n\t          hourRange.min = 0;\n\t          hourRange.max = 23;\n\t          break;\n\t        case 'k':\n\t        case 'kk':\n\t          hourRange.min = 1;\n\t          hourRange.max = 24;\n\t          break;\n\t      }\n\t      this.hourRange = hourRange;\n\t      this.handleOutRangeData();\n\t    },\n\t    handleOutRangeData: function handleOutRangeData() {\n\t      if (this.selected.hour > this.hourRange.max) {\n\t        this.selected.hour = this.hourRange.max;\n\t      } else if (this.selected.hour < this.hourRange.min) {\n\t        this.selected.hour = this.hourRange.min;\n\t      }\n\t    },\n\t    formatValue: function formatValue(type, value) {\n\t      switch (type) {\n\t        case 'H':\n\t        case 'h':\n\t        case 'k':\n\t        case 'm':\n\t        case 's':\n\t          return String(value);\n\t        case 'HH':\n\t        case 'hh':\n\t        case 'kk':\n\t        case 'mm':\n\t        case 'ss':\n\t          return value < 10 ? '0' + value : String(value);\n\t        default:\n\t          return '';\n\t      }\n\t    },\n\t    updatePlaygroundData: function updatePlaygroundData() {\n\t      if (this.muteWatch) {\n\t        return;\n\t      }\n\t      var data = {};\n\t      data[this.type.hour] = this.formatValue(this.type.hour, this.selected.hour);\n\t      data[this.type.minute] = this.formatValue(this.type.minute, this.selected.minute);\n\t\n\t      if (this.type.second !== 'none') {\n\t        data[this.type.second] = this.formatValue(this.type.second, this.selected.second);\n\t      }\n\t\n\t      if (this.type.apm) {\n\t        data[this.type.apm] = this.type.apm === 'A' ? this.selected.apm.toUpperCase() : this.selected.apm;\n\t      }\n\t\n\t      this.playgroundData = data;\n\t      this.refreshHighlight('pgvalue');\n\t      this.refreshHighlight('pgdata');\n\t    },\n\t    listTimeValue: function listTimeValue() {\n\t      var data = this.playgroundData;\n\t      var len = (0, _keys2.default)(data).length;\n\t      var string = '';\n\t      (0, _keys2.default)(data).forEach(function (k, i) {\n\t        string += '      ' + k + ': ' + '\"' + data[k] + '\"';\n\t        if (i < len - 1) {\n\t          string += '\\n';\n\t        }\n\t      });\n\t      return string;\n\t    },\n\t    updateRangeValue: function updateRangeValue(data) {\n\t      this.muteWatch = true;\n\t      this.selected.hour = Number(data[this.type.hour]);\n\t      this.selected.minute = Number(data[this.type.minute]);\n\t      this.selected.second = Number(data[this.type.second]);\n\t      this.selected.apm = (data[this.type.apm] || '').toLowerCase();\n\t      this.refreshHighlight('pgdata');\n\t      this.muteWatch = false;\n\t    },\n\t    refreshHighlight: function refreshHighlight(elm) {\n\t      var self = this;\n\t      this.$nextTick(function () {\n\t        window.hljs.highlightBlock(self.$els[elm]);\n\t      });\n\t    },\n\t    asideStyle: function asideStyle() {\n\t      var initPaddingTop = 220;\n\t      var minPaddingTop = 50;\n\t      return { paddingTop: Math.max(initPaddingTop - this.scrollTop, minPaddingTop) + 'px' };\n\t    }\n\t  },\n\t\n\t  events: {\n\t    'vue-timepicker-update': function vueTimepickerUpdate(data) {\n\t      this.playgroundFullValue = data;\n\t      this.updateRangeValue(data);\n\t      this.refreshHighlight('pgvalue');\n\t    }\n\t  },\n\t\n\t  attached: function attached() {\n\t    var self = this;\n\t    this.$nextTick(function () {\n\t      self.updateHourRange();\n\t      self.updatePlaygroundData();\n\t      window.hljs.initHighlightingOnLoad();\n\t    });\n\t  },\n\t  ready: function ready() {\n\t    var self = this;\n\t    scrollHandler = function scrollHandler(evt) {\n\t      self.scrollTop = (evt.target.scrollingElement || document.documentElement || document.body.parentNode).scrollTop || 0;\n\t    };\n\t    window.addEventListener('scroll', scrollHandler);\n\t  },\n\t  beforeDestroy: function beforeDestroy() {\n\t    window.removeEventListener('scroll', scrollHandler);\n\t  }\n\t};\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _vueTimepicker = __webpack_require__(10);\n\t\n\tvar _vueTimepicker2 = _interopRequireDefault(_vueTimepicker);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  name: 'Samples',\n\t  components: [_vueTimepicker2.default],\n\t  data: function data() {\n\t    return {\n\t      yourData: {\n\t        hh: '03',\n\t        mm: '10',\n\t        ss: '00',\n\t        a: 'am'\n\t      },\n\t      yourFormat: 'hh:mm:ss a',\n\t      yourDaysArray: [{ start_time: { HH: '08', mm: '00' }, end_time: { HH: '09', mm: '00' } }, { start_time: { HH: '15', mm: '00' }, end_time: { HH: '', mm: '' } }, { start_time: { HH: '', mm: '' }, end_time: { HH: '13', mm: '30' } }, { start_time: { HH: '', mm: '' }, end_time: { HH: '', mm: '' } }],\n\t      muteFlowListener: true,\n\t      latestDataFlow: undefined,\n\t      demoData1: { HH: '08', mm: '30' },\n\t      demoData2: { HH: '10', mm: '45' },\n\t      demoArgs: undefined\n\t    };\n\t  },\n\t\n\t  events: {\n\t    'vue-timepicker-update': function vueTimepickerUpdate() {\n\t      var self = this;\n\t      this.$nextTick(function () {\n\t        self.refreshAllHighlight();\n\t      });\n\t    }\n\t  },\n\t  methods: {\n\t    refreshHighlightNextTick: function refreshHighlightNextTick() {\n\t      var self = this;\n\t      this.$nextTick(function () {\n\t        self.refreshAllHighlight();\n\t      });\n\t    },\n\t    refreshAllHighlight: function refreshAllHighlight() {\n\t      if (!this.$el) {\n\t        return;\n\t      }\n\t      var codeBlocks = this.$el.querySelectorAll('pre code');\n\t      Array.prototype.forEach.call(codeBlocks, function (block) {\n\t        window.hljs.highlightBlock(block);\n\t      });\n\t    },\n\t    changeHandler: function changeHandler(eventData) {\n\t      if (this.muteFlowListener) {\n\t        return;\n\t      }\n\t      this.latestDataFlow = eventData;\n\t      this.demoArgs = undefined;\n\t      this.refreshHighlightNextTick();\n\t    },\n\t    otherChangeHandler: function otherChangeHandler(eventData, arg1, arg2) {\n\t      if (this.muteFlowListener) {\n\t        return;\n\t      }\n\t      this.latestDataFlow = eventData;\n\t      this.demoArgs = {\n\t        arg1: arg1,\n\t        arg2: arg2\n\t      };\n\t      this.refreshHighlightNextTick();\n\t    }\n\t  },\n\t  compiled: function compiled() {\n\t    this.refreshHighlightNextTick();\n\t    var self = this;\n\t    window.setTimeout(function () {\n\t      self.muteFlowListener = false;\n\t    }, 1000);\n\t  },\n\t  ready: function ready() {\n\t    this.$nextTick(function () {\n\t      window.hljs.initHighlightingOnLoad();\n\t    });\n\t  }\n\t};\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _keys = __webpack_require__(6);\n\t\n\tvar _keys2 = _interopRequireDefault(_keys);\n\t\n\tvar _stringify = __webpack_require__(15);\n\t\n\tvar _stringify2 = _interopRequireDefault(_stringify);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar CONFIG = {\n\t  HOUR_TOKENS: ['HH', 'H', 'hh', 'h', 'kk', 'k'],\n\t  MINUTE_TOKENS: ['mm', 'm'],\n\t  SECOND_TOKENS: ['ss', 's'],\n\t  APM_TOKENS: ['A', 'a']\n\t};\n\t\n\texports.default = {\n\t  name: 'VueTimepicker',\n\t\n\t  props: {\n\t    timeValue: { type: Object, twoWay: true },\n\t    hideClearButton: { type: Boolean },\n\t    format: { type: String },\n\t    minuteInterval: { type: Number },\n\t    secondInterval: { type: Number },\n\t    id: { type: String }\n\t  },\n\t\n\t  data: function data() {\n\t    return {\n\t      hours: [],\n\t      minutes: [],\n\t      seconds: [],\n\t      apms: [],\n\t      showDropdown: false,\n\t      muteWatch: false,\n\t      hourType: 'HH',\n\t      minuteType: 'mm',\n\t      secondType: '',\n\t      apmType: '',\n\t      hour: '',\n\t      minute: '',\n\t      second: '',\n\t      apm: '',\n\t      fullValues: undefined\n\t    };\n\t  },\n\t\n\t\n\t  computed: {\n\t    displayTime: function displayTime() {\n\t      var formatString = String(this.format || 'HH:mm');\n\t      if (this.hour) {\n\t        formatString = formatString.replace(new RegExp(this.hourType, 'g'), this.hour);\n\t      }\n\t      if (this.minute) {\n\t        formatString = formatString.replace(new RegExp(this.minuteType, 'g'), this.minute);\n\t      }\n\t      if (this.second && this.secondType) {\n\t        formatString = formatString.replace(new RegExp(this.secondType, 'g'), this.second);\n\t      }\n\t      if (this.apm && this.apmType) {\n\t        formatString = formatString.replace(new RegExp(this.apmType, 'g'), this.apm);\n\t      }\n\t      return formatString;\n\t    },\n\t    showClearBtn: function showClearBtn() {\n\t      if (this.hour && this.hour !== '' || this.minute && this.minute !== '') {\n\t        return true;\n\t      }\n\t      return false;\n\t    }\n\t  },\n\t\n\t  watch: {\n\t    'format': 'renderFormat',\n\t    minuteInterval: function minuteInterval(newInteval) {\n\t      this.renderList('minute', newInteval);\n\t    },\n\t    secondInterval: function secondInterval(newInteval) {\n\t      this.renderList('second', newInteval);\n\t    },\n\t\n\t    'timeValue': 'readValues',\n\t    'displayTime': 'fillValues'\n\t  },\n\t\n\t  methods: {\n\t    formatValue: function formatValue(type, i) {\n\t      switch (type) {\n\t        case 'H':\n\t        case 'm':\n\t        case 's':\n\t          return String(i);\n\t        case 'HH':\n\t        case 'mm':\n\t        case 'ss':\n\t          return i < 10 ? '0' + i : String(i);\n\t        case 'h':\n\t        case 'k':\n\t          return String(i + 1);\n\t        case 'hh':\n\t        case 'kk':\n\t          return i + 1 < 10 ? '0' + (i + 1) : String(i + 1);\n\t        default:\n\t          return '';\n\t      }\n\t    },\n\t    checkAcceptingType: function checkAcceptingType(validValues, formatString, fallbackValue) {\n\t      if (!validValues || !formatString || !formatString.length) {\n\t        return '';\n\t      }\n\t      for (var i = 0; i < validValues.length; i++) {\n\t        if (formatString.indexOf(validValues[i]) > -1) {\n\t          return validValues[i];\n\t        }\n\t      }\n\t      return fallbackValue || '';\n\t    },\n\t    renderFormat: function renderFormat(newFormat) {\n\t      newFormat = newFormat || this.format;\n\t      if (!newFormat || !newFormat.length) {\n\t        newFormat = 'HH:mm';\n\t      }\n\t\n\t      this.hourType = this.checkAcceptingType(CONFIG.HOUR_TOKENS, newFormat, 'HH');\n\t      this.minuteType = this.checkAcceptingType(CONFIG.MINUTE_TOKENS, newFormat, 'mm');\n\t      this.secondType = this.checkAcceptingType(CONFIG.SECOND_TOKENS, newFormat);\n\t      this.apmType = this.checkAcceptingType(CONFIG.APM_TOKENS, newFormat);\n\t\n\t      this.renderHoursList();\n\t      this.renderList('minute');\n\t\n\t      if (this.secondType) {\n\t        this.renderList('second');\n\t      }\n\t\n\t      if (this.apmType) {\n\t        this.renderApmList();\n\t      }\n\t\n\t      var self = this;\n\t      this.$nextTick(function () {\n\t        self.readValues();\n\t      });\n\t    },\n\t    renderHoursList: function renderHoursList() {\n\t      var hoursCount = this.hourType === 'h' || this.hourType === 'hh' ? 12 : 24;\n\t      this.hours = [];\n\t      for (var i = 0; i < hoursCount; i++) {\n\t        this.hours.push(this.formatValue(this.hourType, i));\n\t      }\n\t    },\n\t    renderList: function renderList(listType, interval) {\n\t      if (listType === 'second') {\n\t        interval = interval || this.secondInterval;\n\t      } else if (listType === 'minute') {\n\t        interval = interval || this.minuteInterval;\n\t      } else {\n\t        return;\n\t      }\n\t\n\t      if (interval === 0) {\n\t        interval = 60;\n\t      } else if (interval > 60) {\n\t        window.console.warn('`' + listType + '-interval` should be less than 60. Current value is', interval);\n\t        interval = 1;\n\t      } else if (interval < 1) {\n\t        window.console.warn('`' + listType + '-interval` should be NO less than 1. Current value is', interval);\n\t        interval = 1;\n\t      } else if (!interval) {\n\t        interval = 1;\n\t      }\n\t\n\t      if (listType === 'minute') {\n\t        this.minutes = [];\n\t      } else {\n\t        this.seconds = [];\n\t      }\n\t\n\t      for (var i = 0; i < 60; i += interval) {\n\t        if (listType === 'minute') {\n\t          this.minutes.push(this.formatValue(this.minuteType, i));\n\t        } else {\n\t          this.seconds.push(this.formatValue(this.secondType, i));\n\t        }\n\t      }\n\t    },\n\t    renderApmList: function renderApmList() {\n\t      this.apms = [];\n\t      if (!this.apmType) {\n\t        return;\n\t      }\n\t      this.apms = this.apmType === 'A' ? ['AM', 'PM'] : ['am', 'pm'];\n\t    },\n\t    readValues: function readValues() {\n\t      if (!this.timeValue || this.muteWatch) {\n\t        return;\n\t      }\n\t\n\t      var timeValue = JSON.parse((0, _stringify2.default)(this.timeValue || {}));\n\t      var values = (0, _keys2.default)(timeValue);\n\t      if (values.length === 0) {\n\t        return;\n\t      }\n\t\n\t      if (values.indexOf(this.hourType) > -1) {\n\t        this.hour = timeValue[this.hourType];\n\t      }\n\t\n\t      if (values.indexOf(this.minuteType) > -1) {\n\t        this.minute = timeValue[this.minuteType];\n\t      }\n\t\n\t      if (values.indexOf(this.secondType) > -1) {\n\t        this.second = timeValue[this.secondType];\n\t      } else {\n\t        this.second = 0;\n\t      }\n\t\n\t      if (values.indexOf(this.apmType) > -1) {\n\t        this.apm = timeValue[this.apmType];\n\t      }\n\t\n\t      this.fillValues();\n\t    },\n\t    fillValues: function fillValues() {\n\t      var fullValues = {};\n\t\n\t      var baseHour = this.hour;\n\t      var baseHourType = this.hourType;\n\t\n\t      var hourValue = baseHour || baseHour === 0 ? Number(baseHour) : '';\n\t      var baseOnTwelveHours = this.isTwelveHours(baseHourType);\n\t      var apmValue = baseOnTwelveHours && this.apm ? String(this.apm).toLowerCase() : false;\n\t\n\t      CONFIG.HOUR_TOKENS.forEach(function (token) {\n\t        if (token === baseHourType) {\n\t          fullValues[token] = baseHour;\n\t          return;\n\t        }\n\t\n\t        var value = void 0;\n\t        var apm = void 0;\n\t        switch (token) {\n\t          case 'H':\n\t          case 'HH':\n\t            if (!String(hourValue).length) {\n\t              fullValues[token] = '';\n\t              return;\n\t            } else if (baseOnTwelveHours) {\n\t              if (apmValue === 'pm') {\n\t                value = hourValue < 12 ? hourValue + 12 : hourValue;\n\t              } else {\n\t                value = hourValue % 12;\n\t              }\n\t            } else {\n\t              value = hourValue % 24;\n\t            }\n\t            fullValues[token] = token === 'HH' && value < 10 ? '0' + value : String(value);\n\t            break;\n\t          case 'k':\n\t          case 'kk':\n\t            if (!String(hourValue).length) {\n\t              fullValues[token] = '';\n\t              return;\n\t            } else if (baseOnTwelveHours) {\n\t              if (apmValue === 'pm') {\n\t                value = hourValue < 12 ? hourValue + 12 : hourValue;\n\t              } else {\n\t                value = hourValue === 12 ? 24 : hourValue;\n\t              }\n\t            } else {\n\t              value = hourValue === 0 ? 24 : hourValue;\n\t            }\n\t            fullValues[token] = token === 'kk' && value < 10 ? '0' + value : String(value);\n\t            break;\n\t          case 'h':\n\t          case 'hh':\n\t            if (apmValue) {\n\t              value = hourValue;\n\t              apm = apmValue || 'am';\n\t            } else {\n\t              if (!String(hourValue).length) {\n\t                fullValues[token] = '';\n\t                fullValues.a = '';\n\t                fullValues.A = '';\n\t                return;\n\t              } else if (hourValue > 11) {\n\t                apm = 'pm';\n\t                value = hourValue === 12 ? 12 : hourValue % 12;\n\t              } else {\n\t                if (baseOnTwelveHours) {\n\t                  apm = '';\n\t                } else {\n\t                  apm = 'am';\n\t                }\n\t                value = hourValue % 12 === 0 ? 12 : hourValue;\n\t              }\n\t            }\n\t            fullValues[token] = token === 'hh' && value < 10 ? '0' + value : String(value);\n\t            fullValues.a = apm;\n\t            fullValues.A = apm.toUpperCase();\n\t            break;\n\t        }\n\t      });\n\t\n\t      if (this.minute || this.minute === 0) {\n\t        var minuteValue = Number(this.minute);\n\t        fullValues.m = String(minuteValue);\n\t        fullValues.mm = minuteValue < 10 ? '0' + minuteValue : String(minuteValue);\n\t      } else {\n\t        fullValues.m = '';\n\t        fullValues.mm = '';\n\t      }\n\t\n\t      if (this.second || this.second === 0) {\n\t        var secondValue = Number(this.second);\n\t        fullValues.s = String(secondValue);\n\t        fullValues.ss = secondValue < 10 ? '0' + secondValue : String(secondValue);\n\t      } else {\n\t        fullValues.s = '';\n\t        fullValues.ss = '';\n\t      }\n\t\n\t      this.fullValues = fullValues;\n\t      this.updateTimeValue(fullValues);\n\t      this.$dispatch('vue-timepicker-update', fullValues);\n\t    },\n\t    updateTimeValue: function updateTimeValue(fullValues) {\n\t      if (!this.timeValue) {\n\t        this.$dispatch('change', { data: fullValues });\n\t        return;\n\t      }\n\t\n\t      this.muteWatch = true;\n\t\n\t      var baseTimeValue = JSON.parse((0, _stringify2.default)(this.timeValue || {}));\n\t      var timeValue = {};\n\t      (0, _keys2.default)(baseTimeValue).forEach(function (key) {\n\t        timeValue[key] = fullValues[key];\n\t      });\n\t      this.timeValue = timeValue;\n\t\n\t      var self = this;\n\t      this.$nextTick(function () {\n\t        self.muteWatch = false;\n\t        self.$dispatch('change', { data: self.timeValue });\n\t      });\n\t    },\n\t    isTwelveHours: function isTwelveHours(token) {\n\t      return token === 'h' || token === 'hh';\n\t    },\n\t    toggleDropdown: function toggleDropdown() {\n\t      this.showDropdown = !this.showDropdown;\n\t    },\n\t    select: function select(type, value) {\n\t      if (type === 'hour') {\n\t        this.hour = value;\n\t      } else if (type === 'minute') {\n\t        this.minute = value;\n\t      } else if (type === 'second') {\n\t        this.second = value;\n\t      } else if (type === 'apm') {\n\t        this.apm = value;\n\t      }\n\t    },\n\t    clearTime: function clearTime() {\n\t      this.hour = '';\n\t      this.minute = '';\n\t      this.second = '';\n\t      this.apm = '';\n\t    }\n\t  },\n\t\n\t  ready: function ready() {\n\t    this.renderFormat();\n\t  }\n\t};\n\n/***/ },\n/* 15 */,\n/* 16 */,\n/* 17 */,\n/* 18 */,\n/* 19 */,\n/* 20 */,\n/* 21 */,\n/* 22 */,\n/* 23 */,\n/* 24 */,\n/* 25 */,\n/* 26 */,\n/* 27 */,\n/* 28 */,\n/* 29 */,\n/* 30 */,\n/* 31 */,\n/* 32 */,\n/* 33 */,\n/* 34 */,\n/* 35 */,\n/* 36 */,\n/* 37 */,\n/* 38 */,\n/* 39 */,\n/* 40 */,\n/* 41 */,\n/* 42 */,\n/* 43 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 44 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 45 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <div class=main-wrapper> <header v-cloak> <h1>Vue Timepicker</h1> <p>A dropdown time picker for <span class=version>Vue 1.x</span> with flexible time format support</p> </header> <nav class=top-nav :class=\\\"{stick: scrollTop > 150}\\\"> <span class=title>Vue Timepicker</span> <ul> <li><a @click=\\\"switchView('samples')\\\" :class=\\\"{active: currentView === 'samples'}\\\">Common Usage</a></li> <li><a @click=\\\"switchView('playground')\\\" :class=\\\"{active: currentView === 'playground'}\\\">Playground</a></li> <li><a href=https://github.com/phoenixwong/vue-timepicker target=_blank>Documentation</a></li> </ul> <span class=v2x><a href=https://phoenixwong.github.io/vue2-timepicker/ target=_blank>Vue 2.x Version</a> &raquo;</span> </nav> <main class=content :class=\\\"{'nav-affixed': scrollTop > 150}\\\"> <component :is=currentView transition=fade transition-mode=out-in> <div slot=footer-links> <h3 class=title><a class=anchor id=more>#</a>More complex usage</h3> <div class=description> <p>Didn't find what you need? Please check the <a @click=\\\"switchView('playground')\\\">Playground</a> or <a href=https://github.com/phoenixwong/vue-timepicker target=_blank>Documentation</a> for more inspiration.</p> </div> </div> </component> </main> </div> \";\n\n/***/ },\n/* 46 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <section id=playground> <main> <h2 class=section-title>Timepicker Playground</h2> <div id=configPanel> <div class=config-block id=typesSelection> <h3 class=subtitle><a class=anchor>#</a>Generate <code>format</code> string</h3> <div class=config-row> <label class=row-label>Hour:</label> <label class=options v-for=\\\"htype in tokens.hour\\\" :for=\\\"'hour_type' + $index\\\"> <input v-model=type.hour @click=updateHourRange(htype) :value=htype :id=\\\"'hour_type' + $index\\\" type=radio name=hour_type /> {{htype}} </label> </div> <div class=config-row> <label class=row-label>Minute:</label> <label class=options v-for=\\\"mtype in tokens.minute\\\" :for=\\\"'minute_type' + $index\\\"> <input v-model=type.minute :value=mtype :id=\\\"'minute_type' + $index\\\" type=radio name=minute_type /> {{mtype}} </label> </div> <div class=config-row> <label class=row-label>Second:</label> <label class=options v-for=\\\"stype in tokens.second\\\" :for=\\\"'second_type' + $index\\\"> <input v-model=type.second :value=stype :id=\\\"'second_type' + $index\\\" type=radio name=second_type /> {{stype}} </label> </div> <div class=config-row v-if=needApm> <label class=row-label>AM/PM:</label> <label class=options v-for=\\\"atype in tokens.apm\\\" :for=\\\"'apm_type' + $index\\\"> <input v-model=type.apm :value=atype :id=\\\"'apm_type' + $index\\\" type=radio name=apm_type /> {{atype}} </label> </div> </div> <div class=config-block> <h3 class=subtitle><a class=anchor>#</a>Customized Interval</h3> <div class=\\\"config-row group\\\"> <label> <input v-model=customInterval.minute type=checkbox /> Minute Interval </label> <label v-if=customInterval.minute class=range-wrapper> <input v-model=interval.minute type=range min=0 max=60 step=1 /> <span v-text=interval.minute></span> </label> </div> <div class=\\\"config-row group\\\"> <label> <input v-model=customInterval.second type=checkbox /> Second Interval </label> <label v-if=customInterval.second class=range-wrapper> <input v-model=interval.second type=range min=0 max=60 step=1 /> <span v-text=interval.second></span> </label> </div> </div> <div class=config-block> <h3 class=subtitle><a class=anchor>#</a>Clear Button</h3> <div class=\\\"config-row group\\\"> <label for=enable_btn_true> <input v-model=enableClearBtn type=radio id=enable_btn_true name=enable_btn :value=true /> Enable </label> <label for=enable_btn_false> <input v-model=enableClearBtn type=radio id=enable_btn_false name=enable_btn :value=false /> Disable </label> </div> </div> <div class=codes> <pre data-title=HTML><code v-el:pghtml class=html v-text=htmlCode></code></pre> </div> <div class=config-block id=valuesSelection> <h3 class=subtitle><a class=anchor>#</a>Bind <code>time-value</code> data</h3> <div class=config-row> <label class=row-label>Hour:</label> <label class=options> <input v-model=selected.hour type=range :min=hourRange.min :max=hourRange.max step=1 /> <span v-text=selected.hour></span> </label> </div> <div class=config-row> <label class=row-label>Minute:</label> <label class=options> <input v-model=selected.minute type=range min=0 max=59 :step=interval.minute /> <span v-text=selected.minute></span> </label> </div> <div v-if=\\\"type.second !== 'none'\\\" class=config-row> <label class=row-label>Second:</label> <label class=options> <input v-model=selected.second type=range min=0 max=59 :step=interval.second /> <span v-text=selected.second></span> </label> </div> <div v-if=needApm :class=\\\"{capitailized: type.apm === 'A'}\\\" class=config-row> <label class=row-label>AM/PM:</label> <label class=options for=selected_apm_am> <input v-model=selected.apm type=radio id=selected_apm_am name=selected_apm value=am /> am </label> <label class=options for=selected_apm_pm> <input v-model=selected.apm type=radio id=selected_apm_pm name=selected_apm value=pm /> pm </label> </div> </div> <div class=codes> <pre data-title=JS><code v-el:pgdata class=javascript v-text=yourTimeValue></code></pre> </div> <div class=codes> <pre data-title=HTML><code v-el:pghtmlvar class=html v-text=htmlCodeWithVar></code></pre> </div> </div> </main> <aside class=previews :style=asideStyle()> <div id=playgroundPreview class=preview> <b>Format string: </b> <span v-text=formatString></span> <p> <vue-timepicker :format=formatString :time-value.sync=playgroundData :minute-interval=interval.minute :second-interval=interval.second :hide-clear-button=!enableClearBtn></vue-timepicker> </p> </div> <div id=dispatchedValue class=codes> <pre data-title=vue-timepicker-update><code v-el:pgvalue class=json v-text=\\\"playgroundFullValue | json 2\\\"></code></pre> </div> </aside> </section> \";\n\n/***/ },\n/* 47 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <section id=mostlyUsedSamples> <h2 class=section-title>Common Usage</h2> <div class=block> <h3 class=title><a class=anchor id=default>#</a>Default</h3> <div class=description> <p>Default to 24-hour format <code>HH:mm</code></p> </div> <div class=codes> <pre data-title=HTML><code v-el:ugdefault class=html>&lt;vue-timepicker&gt;&lt;/vue-timepicker&gt;</code></pre> </div> <div class=preview> <vue-timepicker></vue-timepicker> </div> </div> <div class=block> <h3 class=title><a class=anchor id=format12hours>#</a>12 Hours</h3> <div class=description> <p>By properly define the <code>format</code> string, you can set timepicker in form of 12 hours</p> </div> <div> <div class=codes> <pre data-title=HTML>\\n<code class=html>&lt;!-- 12-hour sample 1 --&gt;\\n&lt;vue-timepicker format=\\\"hh:mm A\\\"&gt;&lt;/vue-timepicker&gt;\\n\\n&lt;!-- 12-hour sample 2 --&gt;\\n&lt;vue-timepicker format=\\\"h:m a\\\"&gt;&lt;/vue-timepicker&gt;\\n</code>\\n</pre> </div> <div class=preview> <b>12-hour sample 1</b> <p> <vue-timepicker format=\\\"hh:mm A\\\"></vue-timepicker> </p> <b>12-hour sample 2</b> <p> <vue-timepicker format=\\\"h:m a\\\"></vue-timepicker> </p> </div> </div> </div> <div class=block> <h3 class=title><a class=anchor id=seconds>#</a>Seconds Picker</h3> <div class=description> <p>You can trigger the seconds picker by adding <code>ss</code> or <code>s</code> in your format string.</p> </div> <div class=codes> <pre data-title=HTML><code class=html>&lt;vue-timepicker format=\\\"HH:mm:ss\\\"&gt;&lt;/vue-timepicker&gt;</code></pre> </div> <div class=preview> <vue-timepicker format=HH:mm:ss></vue-timepicker> </div> </div> <div class=block> <h3 class=title><a class=anchor id=interval>#</a>Customized Interval</h3> <div class=description> <p>Timepicker also allows you to display minutes or seconds picker with certain interval, like a 10-minute interval <code>0, 10, 20, ... 50, 60</code> for example</p> </div> <div class=codes> <pre data-title=HTML>\\n<code class=html>&lt;!-- 10-minute interval --&gt;\\n&lt;vue-timepicker :minute-interval=\\\"10\\\"&gt;&lt;/vue-timepicker&gt;\\n\\n&lt;!-- 15-second interval --&gt;\\n&lt;vue-timepicker format=\\\"HH:mm:ss\\\" :second-interval=\\\"15\\\"&gt;&lt;/vue-timepicker&gt;\\n\\n&lt;!-- 5-minute interval plus 10-second interval --&gt;\\n&lt;vue-timepicker format=\\\"hh:mm:ss\\\" :minute-interval=\\\"5\\\" :second-interval=\\\"10\\\"&gt;&lt;/vue-timepicker&gt;\\n</code>\\n</pre> </div> <div class=preview> <b>10-minute interval</b> <p> <vue-timepicker :minute-interval=10></vue-timepicker> </p> <b>15-second interval</b> <p> <vue-timepicker format=HH:mm:ss :second-interval=15></vue-timepicker> </p> <b>5-minute interval plus 10-second interval</b> <p> <vue-timepicker format=hh:mm:ss :minute-interval=5 :second-interval=10></vue-timepicker> </p> </div> </div> <div class=block> <h3 class=title><a class=anchor id=sync>#</a>Sync Data</h3> <div class=description> <p>Manipulate your timepicker's data as usual</p> </div> <div class=codes> <pre data-title=JS><code class=javascript>data: {\\n  yourFormat: 'hh:mm:ss a',\\n  yourData: {\\n    hh: '03',\\n    mm: '10',\\n    ss: '00',\\n    a: 'am'\\n  }\\n}</code></pre> </div> <div class=codes> <pre data-title=HTML><code class=html>&lt;vue-timepicker :format=\\\"yourFormat\\\" :time-value.sync=\\\"yourData\\\"&gt;&lt;/vue-timepicker&gt;</code></pre> </div> <div> <div class=preview> <vue-timepicker :format=yourFormat :time-value.sync=yourData></vue-timepicker> </div> </div> </div> <div class=block> <h3 class=title><a class=anchor id=hideClearButton>#</a>Hide Clear Button</h3> <div class=description> <p>If you don't want to expose the clear button in the UI, <code>hide-clear-button</code> property will do the trick.</p> </div> <div class=codes> <pre data-title=HTML><code class=html>&lt;vue-timepicker hide-clear-button&gt;&lt;/vue-timepicker&gt;</code></pre> </div> <div class=preview> <vue-timepicker hide-clear-button></vue-timepicker> </div> </div> <div class=block> <h3 class=title><a class=anchor id=vForSample>#</a>Work with <code>v-for</code></h3> <div class=description> <p>Here's a quick sample of <code>v-for</code> usage</p> </div> <div class=codes> <pre data-title=JS><code class=javascript>data: {\\n  yourDaysArray: [\\n    {start_time: {HH: '08', mm: '00'}, end_time: {HH: '09', mm: '00'}},\\n    {start_time: {HH: '15', mm: '00'}, end_time: {HH: '', mm: ''}},\\n    {start_time: {HH: '', mm: ''}, end_time: {HH: '13', mm: '30'}},\\n    {start_time: {HH: '', mm: ''}, end_time: {HH: '', mm: ''}}\\n  ]\\n}</code></pre> </div> <div class=codes> <pre data-title=HTML><code class=html>\\n&lt;p v-for=\\\"day in yourDaysArray\\\"&gt;\\n  &lt;label&gt;Day <span>{{</span> $index + 1 <span>}}</span>: &lt;/label&gt;\\n  &lt;vue-timepicker :time-value.sync=\\\"day.start_time\\\"&gt;&lt;/vue-timepicker&gt;\\n  &lt;span&gt; to &lt;/span&gt;\\n  &lt;vue-timepicker :time-value.sync=\\\"day.end_time\\\"&gt;&lt;/vue-timepicker&gt;\\n&lt;/p&gt;\\n</code></pre> </div> <div class=preview> <p v-for=\\\"day in yourDaysArray\\\"> <label>Day {{ $index + 1 }}: </label> <vue-timepicker :time-value.sync=day.start_time></vue-timepicker> <span> to </span> <vue-timepicker :time-value.sync=day.end_time></vue-timepicker> </p> </div> <div class=codes> <pre data-title=\\\"yourDaysArray JSON\\\"><code class=json v-text=\\\"yourDaysArray | json 2\\\">\\n</code></pre> </div> </div> <div class=block> <h3 class=title><a class=anchor id=onChangeSample>#</a>The <code>change</code> Event</h3> <div class=description> <p>The <code>change</code> event was introduced in v0.2.1. You can use <code>@change</code> to target and handle individual return data.</p> </div> <div class=codes> <pre data-title=JS><code class=javascript>\\nmethods: {\\n  // No argument\\n  changeHandler (eventData) {\\n    // eventData -> {data: {HH:..., mm:...}}\\n  },\\n\\n  // Customized arguments\\n  otherChangeHandler (eventData, arg1, arg2) {\\n    // eventData -> [{data: {HH:..., mm:...}}]\\n    // arg1 -> 'foo' or 'bar' in this demo\\n    // arg2 -> 1 or 42 in this demo\\n  }\\n}\\n</code></pre> </div> <div class=codes> <pre data-title=HTML><code class=html>&lt;!--\\n[A] With `time-value` set\\n--&gt;\\n\\n&lt;!-- A-1: No argument --&gt;\\n&lt;vue-timepicker :time-value.sync=\\\"demoData1\\\" @change=\\\"changeHandler\\\"&gt;&lt;/vue-timepicker&gt;\\n\\n&lt;!-- A-2: Custom argument --&gt;\\n&lt;vue-timepicker :time-value.sync=\\\"demoData2\\\" @change=\\\"otherChangeHandler($arguments, 'foo', 1)\\\"&gt;&lt;/vue-timepicker&gt;\\n\\n&lt;!--\\n[B] No binding `time-value`\\n--&gt;\\n\\n&lt;!-- B-1: No argument --&gt;\\n&lt;vue-timepicker @change=\\\"changeHandler\\\"&gt;&lt;/vue-timepicker&gt;\\n\\n&lt;!-- B-2: Custom argument --&gt;\\n&lt;vue-timepicker @change=\\\"otherChangeHandler($arguments, 'bar', 42)\\\"&gt;&lt;/vue-timepicker&gt;\\n</code></pre> </div> <div class=preview> <p> <b>[A] With `time-value` set, <code>change</code> event will only returns values in predefined format</b> </p> <b>A-1: No argument</b> <p> <vue-timepicker :time-value.sync=demoData1 @change=changeHandler></vue-timepicker> </p> <b>A-2: Custom argument ('foo', 1)</b> <p> <vue-timepicker :time-value.sync=demoData2 @change=\\\"otherChangeHandler($arguments, 'foo', 1)\\\"></vue-timepicker> </p> <p> <b>[B] No binding `time-value`, full value data will be returned</b> </p> <b>B-1: No argument</b> <p> <vue-timepicker @change=changeHandler></vue-timepicker> </p> <b>B-2: Custom argument ('bar', 42)</b> <p> <vue-timepicker @change=\\\"otherChangeHandler($arguments, 'bar', 42)\\\"></vue-timepicker> </p> </div> <div class=codes v-if=demoArgs> <pre data-title=\\\"Custom Arguments\\\"><code class=javascript v-text=\\\"demoArgs | json\\\">\\n</code></pre> </div> <div class=codes v-if=latestDataFlow> <pre data-title=\\\"Latest eventData\\\"><code class=javascript v-text=\\\"latestDataFlow | json\\\">\\n</code></pre> </div> </div> <div class=\\\"block footer-links\\\"> <slot name=footer-links></slot> </div> </section> \";\n\n/***/ },\n/* 48 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <span class=time-picker> <input class=display-time v-model=displayTime :id=id @click.stop=toggleDropdown type=text readonly=readonly /> <span class=clear-btn v-if=!hideClearButton v-show=\\\"!showDropdown && showClearBtn\\\" @click.stop=clearTime>&times;</span> <div class=time-picker-overlay v-if=showDropdown @click.stop=toggleDropdown></div> <div class=dropdown v-show=showDropdown> <div class=select-list> <ul class=hours> <li class=hint v-text=hourType></li> <li v-for=\\\"hr in hours\\\" v-text=hr :class=\\\"{active: hour === hr}\\\" @click.stop=\\\"select('hour', hr)\\\"></li> </ul> <ul class=minutes> <li class=hint v-text=minuteType></li> <li v-for=\\\"m in minutes\\\" v-text=m :class=\\\"{active: minute === m}\\\" @click.stop=\\\"select('minute', m)\\\"></li> </ul> <ul class=seconds v-if=secondType> <li class=hint v-text=secondType></li> <li v-for=\\\"s in seconds\\\" v-text=s :class=\\\"{active: second === s}\\\" @click.stop=\\\"select('second', s)\\\"></li> </ul> <ul class=apms v-if=apmType> <li class=hint v-text=apmType></li> <li v-for=\\\"a in apms\\\" v-text=a :class=\\\"{active: apm === a}\\\" @click.stop=\\\"select('apm', a)\\\"></li> </ul> </div> </div> </span> \";\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(43)\n\t__vue_script__ = __webpack_require__(11)\n\t__vue_template__ = __webpack_require__(45)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(12)\n\t__vue_template__ = __webpack_require__(46)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(13)\n\t__vue_template__ = __webpack_require__(47)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ }\n]);\n\n\n/** WEBPACK FOOTER **\n ** static/js/app.7b86c713d192e7d8fe9e.js\n **/","import Vue from 'vue'\nimport App from './App.vue'\n\n/* eslint-disable no-new */\nnew Vue({\n  el: 'body',\n  components: { App }\n})\n\n\n\n/** WEBPACK FOOTER **\n ** ./demo/main.js\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../node_modules/vue-loader/lib/style-rewriter.js!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./vue-timepicker.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../node_modules/vue-loader/lib/selector.js?type=script&index=0!./vue-timepicker.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../node_modules/vue-loader/lib/selector.js?type=template&index=0!./vue-timepicker.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/vue-timepicker.vue\n ** module id = 10\n ** module chunks = 2\n **/","<script>\nimport Samples from 'components/Samples.vue'\nimport Playground from 'components/Playground.vue'\n\nvar scrollHandler\n\nexport default {\n  name: 'App',\n  components: {\n    'samples': Samples,\n    'playground': Playground\n  },\n\n  data () {\n    return {\n      currentView: 'samples',\n      scrollTop: 0\n    }\n  },\n\n  methods: {\n    switchView (target) {\n      this.currentView = target\n      document.body.scrollTop = 0\n    }\n  },\n\n  ready () {\n    const self = this\n    scrollHandler = (evt) => {\n      self.scrollTop = (evt.target.scrollingElement || (document.documentElement || document.body.parentNode)).scrollTop || 0\n    }\n    window.addEventListener('scroll', scrollHandler)\n  },\n\n  beforeDestroy () {\n    window.removeEventListener('scroll', scrollHandler)\n  }\n}\n</script>\n\n<template>\n  <div class=\"main-wrapper\">\n    <header v-cloak>\n      <h1>Vue Timepicker</h1>\n      <p>A dropdown time picker for <span class=\"version\">Vue 1.x</span> with flexible time format support</p>\n    </header>\n    <nav class=\"top-nav\" :class=\"{stick: scrollTop > 150}\">\n      <span class=\"title\">Vue Timepicker</span>\n      <ul>\n        <li><a @click=\"switchView('samples')\" :class=\"{active: currentView === 'samples'}\">Common Usage</a></li>\n        <li><a @click=\"switchView('playground')\" :class=\"{active: currentView === 'playground'}\">Playground</a></li>\n        <li><a href=\"https://github.com/phoenixwong/vue-timepicker\" target=\"_blank\">Documentation</a></li>\n      </ul>\n      <span class=\"v2x\"><a href=\"https://phoenixwong.github.io/vue2-timepicker/\" target=\"_blank\">Vue 2.x Version</a> &raquo;</span>\n    </nav>\n    <main class=\"content\" :class=\"{'nav-affixed': scrollTop > 150}\">\n      <component :is=\"currentView\" transition=\"fade\" transition-mode=\"out-in\">\n        <div slot=\"footer-links\">\n          <h3 class=\"title\"><a class=\"anchor\" id=\"more\">#</a>More complex usage</h3>\n          <div class=\"description\">\n            <p>Didn't find what you need? Please check the <a @click=\"switchView('playground')\">Playground</a> or <a href=\"https://github.com/phoenixwong/vue-timepicker\" target=\"_blank\">Documentation</a> for more inspiration.</p>\n          </div>\n        </div>\n      </component>\n    </main>\n  </div>\n</template>\n\n<style lang=\"sass\">\n@import \"./assets/demo.scss\";\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** App.vue?2e711aeb\n **/","<script>\nimport VueTimepicker from 'src/vue-timepicker.vue'\n\nvar scrollHandler\n\nexport default {\n  name: 'Playground',\n  components: [VueTimepicker],\n  data () {\n    return {\n      tokens: {\n        hour: ['HH', 'H', 'hh', 'h', 'kk', 'k'],\n        minute: ['mm', 'm'],\n        second: ['ss', 's', 'none'],\n        apm: ['A', 'a']\n      },\n\n      type: {\n        hour: 'hh',\n        minute: 'mm',\n        second: 'ss',\n        apm: 'A'\n      },\n\n      selected: {\n        hour: 1,\n        minute: 0,\n        second: 0,\n        apm: 'am'\n      },\n\n      hourRange: {\n        min: 1,\n        max: 12\n      },\n\n      interval: {\n        minute: 1,\n        second: 1\n      },\n\n      customInterval: {\n        minute: false,\n        second: false\n      },\n\n      enableClearBtn: true,\n\n      playgroundData: {},\n\n      playgroundFullValue: {},\n\n      muteWatch: false,\n\n      scrollTop: 0\n    }\n  },\n\n  computed: {\n    formatString () {\n      let formatString = this.type.hour + ':' + this.type.minute\n      if (this.type.second !== 'none') {\n        formatString += (':' + this.type.second)\n      }\n      if (this.type.apm) {\n        formatString += (' ' + this.type.apm)\n      }\n      return formatString\n    },\n\n    needApm () {\n      return this.type.hour === 'h' || this.type.hour === 'hh'\n    },\n\n    htmlCode () {\n      let start = '<vue-timepicker'\n      let end = '>\\n</vue-timepicker>'\n\n      start += (' format=\"' + this.formatString + '\"')\n\n      if (this.customInterval.minute) {\n        start += ('\\n :minute-interval=\"' + this.interval.minute + '\"')\n      }\n\n      if (this.customInterval.second) {\n        start += ('\\n :second-interval=\"' + this.interval.second + '\"')\n      }\n\n      if (!this.enableClearBtn) {\n        start += ('\\n hide-clear-button')\n      }\n\n      return start + end\n    },\n\n    htmlCodeWithVar () {\n      let htmlCode = this.htmlCode\n      const end = '>\\n</vue-timepicker>'\n      const newEnd = '\\n :time-value.sync=\"yourTimeValue\">\\n</vue-timepicker>'\n      htmlCode = htmlCode.replace(end, newEnd)\n\n      this.refreshHighlight('pghtml')\n      this.refreshHighlight('pghtmlvar')\n\n      return htmlCode\n    },\n\n    yourTimeValue () {\n      let code = 'data: function () {\\n'\n      code += '  return {\\n'\n      code += '    yourTimeValue: {\\n'\n      code += this.listTimeValue()\n      code += '\\n    }\\n'\n      code += '  }\\n'\n      code += '}'\n      return code\n    }\n  },\n\n  watch: {\n    'selected': {\n      deep: true,\n      handler: 'updatePlaygroundData'\n    },\n\n    'type': {\n      deep: true,\n      handler: 'updatePlaygroundData'\n    },\n\n    needApm (isNeeded) {\n      if (isNeeded) {\n        if (!this.selected.apm) {\n          this.type.apm = 'A'\n          this.selected.apm = 'am'\n        }\n      } else {\n        this.type.apm = ''\n        this.selected.apm = ''\n      }\n    },\n\n    'customInterval': {\n      deep: true,\n      handler: function (custom) {\n        if (!custom.minute) {\n          this.interval.minute = 1\n        }\n        if (!custom.second) {\n          this.interval.second = 1\n        }\n      }\n    }\n  },\n\n  methods: {\n    updateHourRange (hourType) {\n      hourType = hourType || this.type.hour\n      let hourRange = {}\n      switch (hourType) {\n        case 'h':\n        case 'hh':\n          hourRange.min = 1\n          hourRange.max = 12\n          break\n        case 'H':\n        case 'HH':\n          hourRange.min = 0\n          hourRange.max = 23\n          break\n        case 'k':\n        case 'kk':\n          hourRange.min = 1\n          hourRange.max = 24\n          break\n      }\n      this.hourRange = hourRange\n      this.handleOutRangeData()\n    },\n\n    handleOutRangeData () {\n      if (this.selected.hour > this.hourRange.max) {\n        this.selected.hour = this.hourRange.max\n      } else if (this.selected.hour < this.hourRange.min) {\n        this.selected.hour = this.hourRange.min\n      }\n    },\n\n    formatValue (type, value) {\n      switch (type) {\n        case 'H':\n        case 'h':\n        case 'k':\n        case 'm':\n        case 's':\n          return String(value)\n        case 'HH':\n        case 'hh':\n        case 'kk':\n        case 'mm':\n        case 'ss':\n          return value < 10 ? `0${value}` : String(value)\n        default:\n          return ''\n      }\n    },\n\n    updatePlaygroundData () {\n      if (this.muteWatch) { return }\n      let data = {}\n      data[this.type.hour] = this.formatValue(this.type.hour, this.selected.hour)\n      data[this.type.minute] = this.formatValue(this.type.minute, this.selected.minute)\n\n      if (this.type.second !== 'none') {\n        data[this.type.second] = this.formatValue(this.type.second, this.selected.second)\n      }\n\n      if (this.type.apm) {\n        data[this.type.apm] = this.type.apm === 'A' ? (this.selected.apm).toUpperCase() : this.selected.apm\n      }\n\n      this.playgroundData = data\n      this.refreshHighlight('pgvalue')\n      this.refreshHighlight('pgdata')\n    },\n\n    listTimeValue () {\n      const data = this.playgroundData\n      const len = Object.keys(data).length\n      let string = ''\n      Object.keys(data).forEach((k, i) => {\n        string += ('      ' + k + ': ' + '\"' + data[k] + '\"')\n        if (i < len - 1) {\n          string += '\\n'\n        }\n      })\n      return string\n    },\n\n    updateRangeValue (data) {\n      this.muteWatch = true\n      this.selected.hour = Number(data[this.type.hour])\n      this.selected.minute = Number(data[this.type.minute])\n      this.selected.second = Number(data[this.type.second])\n      this.selected.apm = (data[this.type.apm] || '').toLowerCase()\n      this.refreshHighlight('pgdata')\n      this.muteWatch = false\n    },\n\n    refreshHighlight (elm) {\n      const self = this\n      this.$nextTick(() => {\n        window.hljs.highlightBlock(self.$els[elm])\n      })\n    },\n\n    asideStyle () {\n      const initPaddingTop = 220\n      const minPaddingTop = 50\n      return {paddingTop: (Math.max(initPaddingTop - this.scrollTop, minPaddingTop)) + 'px'}\n    }\n  },\n\n  events: {\n    'vue-timepicker-update': function (data) {\n      this.playgroundFullValue = data\n      this.updateRangeValue(data)\n      this.refreshHighlight('pgvalue')\n    }\n  },\n\n  attached () {\n    const self = this\n    this.$nextTick(() => {\n      self.updateHourRange()\n      self.updatePlaygroundData()\n      window.hljs.initHighlightingOnLoad()\n    })\n  },\n\n  ready () {\n    const self = this\n    scrollHandler = (evt) => {\n      self.scrollTop = (evt.target.scrollingElement || (document.documentElement || document.body.parentNode)).scrollTop || 0\n    }\n    window.addEventListener('scroll', scrollHandler)\n  },\n\n  beforeDestroy () {\n    window.removeEventListener('scroll', scrollHandler)\n  }\n}\n</script>\n\n<template>\n<section id=\"playground\">\n  <main>\n    <h2 class=\"section-title\">Timepicker Playground</h2>\n    <div id=\"configPanel\">\n      <div class=\"config-block\" id=\"typesSelection\">\n        <h3 class=\"subtitle\"><a class=\"anchor\">#</a>Generate <code>format</code> string</h3>\n        <div class=\"config-row\">\n          <label class=\"row-label\">Hour:</label>\n          <label class=\"options\" v-for=\"htype in tokens.hour\" :for=\"'hour_type' + $index\">\n            <input v-model=\"type.hour\" @click=\"updateHourRange(htype)\" :value=\"htype\" :id=\"'hour_type' + $index\" type=\"radio\" name=\"hour_type\" /> {{htype}}\n          </label>\n        </div>\n        <div class=\"config-row\">\n          <label class=\"row-label\">Minute:</label>\n          <label class=\"options\" v-for=\"mtype in tokens.minute\" :for=\"'minute_type' + $index\">\n            <input v-model=\"type.minute\" :value=\"mtype\" :id=\"'minute_type' + $index\" type=\"radio\" name=\"minute_type\" /> {{mtype}}\n          </label>\n        </div>\n        <div class=\"config-row\">\n          <label class=\"row-label\">Second:</label>\n          <label class=\"options\" v-for=\"stype in tokens.second\" :for=\"'second_type' + $index\">\n            <input v-model=\"type.second\" :value=\"stype\" :id=\"'second_type' + $index\" type=\"radio\" name=\"second_type\" /> {{stype}}\n          </label>\n        </div>\n        <div class=\"config-row\" v-if=\"needApm\">\n          <label class=\"row-label\">AM/PM:</label>\n          <label class=\"options\" v-for=\"atype in tokens.apm\" :for=\"'apm_type' + $index\">\n            <input v-model=\"type.apm\" :value=\"atype\" :id=\"'apm_type' + $index\" type=\"radio\" name=\"apm_type\" /> {{atype}}\n          </label>\n        </div>\n      </div>\n\n      <div class=\"config-block\">\n        <h3 class=\"subtitle\"><a class=\"anchor\">#</a>Customized Interval</h3>\n        <div class=\"config-row group\">\n          <label>\n            <input v-model=\"customInterval.minute\" type=\"checkbox\" /> Minute Interval\n          </label>\n          <label v-if=\"customInterval.minute\" class=\"range-wrapper\">\n            <input v-model=\"interval.minute\" type=\"range\" min=\"0\" max=\"60\" step=\"1\" />\n            <span v-text=\"interval.minute\"></span>\n          </label>\n        </div>\n        <div class=\"config-row group\">\n          <label>\n            <input v-model=\"customInterval.second\" type=\"checkbox\" /> Second Interval\n          </label>\n          <label v-if=\"customInterval.second\" class=\"range-wrapper\" >\n            <input v-model=\"interval.second\" type=\"range\" min=\"0\" max=\"60\" step=\"1\" />\n            <span v-text=\"interval.second\"></span>\n          </label>\n        </div>\n      </div>\n\n      <div class=\"config-block\">\n        <h3 class=\"subtitle\"><a class=\"anchor\">#</a>Clear Button</h3>\n        <div class=\"config-row group\">\n          <label for=\"enable_btn_true\">\n            <input v-model=\"enableClearBtn\" type=\"radio\" id=\"enable_btn_true\" name=\"enable_btn\" :value=\"true\" /> Enable\n          </label>\n          <label for=\"enable_btn_false\">\n            <input v-model=\"enableClearBtn\" type=\"radio\" id=\"enable_btn_false\" name=\"enable_btn\" :value=\"false\" /> Disable\n          </label>\n        </div>\n      </div>\n\n      <div class=\"codes\">\n        <pre data-title=\"HTML\"><code v-el:pghtml class=\"html\" v-text=\"htmlCode\"></code></pre>\n      </div>\n\n      <div class=\"config-block\" id=\"valuesSelection\">\n        <h3 class=\"subtitle\"><a class=\"anchor\">#</a>Bind <code>time-value</code> data</h3>\n        <div class=\"config-row\">\n          <label class=\"row-label\">Hour:</label>\n          <label class=\"options\">\n            <input v-model=\"selected.hour\" type=\"range\" :min=\"hourRange.min\" :max=\"hourRange.max\" step=\"1\" />\n            <span v-text=\"selected.hour\"></span>\n          </label>\n        </div>\n        <div class=\"config-row\">\n          <label class=\"row-label\">Minute:</label>\n          <label class=\"options\">\n            <input v-model=\"selected.minute\" type=\"range\" min=\"0\" max=\"59\" :step=\"interval.minute\" />\n            <span v-text=\"selected.minute\"></span>\n          </label>\n        </div>\n        <div v-if=\"type.second !== 'none'\" class=\"config-row\">\n          <label class=\"row-label\">Second:</label>\n          <label class=\"options\">\n            <input v-model=\"selected.second\" type=\"range\" min=\"0\" max=\"59\" :step=\"interval.second\" />\n            <span v-text=\"selected.second\"></span>\n          </label>\n        </div>\n        <div v-if=\"needApm\" :class=\"{capitailized: type.apm === 'A'}\" class=\"config-row\">\n          <label class=\"row-label\">AM/PM:</label>\n          <label class=\"options\" for=\"selected_apm_am\">\n            <input v-model=\"selected.apm\" type=\"radio\" id=\"selected_apm_am\" name=\"selected_apm\" value=\"am\" /> am\n          </label>\n          <label class=\"options\" for=\"selected_apm_pm\">\n            <input v-model=\"selected.apm\" type=\"radio\" id=\"selected_apm_pm\" name=\"selected_apm\" value=\"pm\" /> pm\n          </label>\n        </div>\n      </div>\n\n      <div class=\"codes\">\n        <pre data-title=\"JS\"><code v-el:pgdata class=\"javascript\" v-text=\"yourTimeValue\"></code></pre>\n      </div>\n\n      <div class=\"codes\">\n        <pre data-title=\"HTML\"><code v-el:pghtmlvar class=\"html\" v-text=\"htmlCodeWithVar\"></code></pre>\n      </div>\n\n    </div>\n\n  </main>\n\n  <aside class=\"previews\" :style=\"asideStyle()\">\n    <div id=\"playgroundPreview\" class=\"preview\">\n      <b>Format string: </b>\n      <span v-text=\"formatString\"></span>\n      <p>\n        <vue-timepicker :format=\"formatString\" :time-value.sync=\"playgroundData\" :minute-interval=\"interval.minute\" :second-interval=\"interval.second\" :hide-clear-button=\"!enableClearBtn\"></vue-timepicker>\n      </p>\n    </div>\n\n    <div id=\"dispatchedValue\" class=\"codes\">\n      <pre data-title=\"vue-timepicker-update\"><code v-el:pgvalue class=\"json\" v-text=\"playgroundFullValue | json 2\"></code></pre>\n    </div>\n  </aside>\n\n</section>\n</template>\n\n\n\n/** WEBPACK FOOTER **\n ** Playground.vue?3495b1f8\n **/","<script>\nimport VueTimepicker from 'src/vue-timepicker.vue'\n\nexport default {\n  name: 'Samples',\n  components: [VueTimepicker],\n  data () {\n    return {\n      yourData: {\n        hh: '03',\n        mm: '10',\n        ss: '00',\n        a: 'am'\n      },\n      yourFormat: 'hh:mm:ss a',\n      yourDaysArray: [\n        {start_time: {HH: '08', mm: '00'}, end_time: {HH: '09', mm: '00'}},\n        {start_time: {HH: '15', mm: '00'}, end_time: {HH: '', mm: ''}},\n        {start_time: {HH: '', mm: ''}, end_time: {HH: '13', mm: '30'}},\n        {start_time: {HH: '', mm: ''}, end_time: {HH: '', mm: ''}}\n      ],\n      muteFlowListener: true,\n      latestDataFlow: undefined,\n      demoData1: {HH: '08', mm: '30'},\n      demoData2: {HH: '10', mm: '45'},\n      demoArgs: undefined\n    }\n  },\n  events: {\n    'vue-timepicker-update': function () {\n      const self = this\n      this.$nextTick(() => {\n        self.refreshAllHighlight()\n      })\n    }\n  },\n  methods: {\n    refreshHighlightNextTick () {\n      const self = this\n      this.$nextTick(() => {\n        self.refreshAllHighlight()\n      })\n    },\n\n    refreshAllHighlight () {\n      if (!this.$el) { return }\n      const codeBlocks = this.$el.querySelectorAll('pre code')\n      Array.prototype.forEach.call(codeBlocks, (block) => {\n        window.hljs.highlightBlock(block)\n      })\n    },\n\n    changeHandler (eventData) {\n      if (this.muteFlowListener) { return }\n      this.latestDataFlow = eventData\n      this.demoArgs = undefined\n      this.refreshHighlightNextTick()\n    },\n\n    otherChangeHandler (eventData, arg1, arg2) {\n      if (this.muteFlowListener) { return }\n      this.latestDataFlow = eventData\n      this.demoArgs = {\n        arg1: arg1,\n        arg2: arg2\n      }\n      this.refreshHighlightNextTick()\n    }\n  },\n  compiled () {\n    this.refreshHighlightNextTick()\n    const self = this\n    window.setTimeout(() => {\n      self.muteFlowListener = false\n    }, 1000)\n  },\n  ready () {\n    this.$nextTick(() => {\n      window.hljs.initHighlightingOnLoad()\n    })\n  }\n}\n</script>\n\n<template>\n  <section id=\"mostlyUsedSamples\">\n    <h2 class=\"section-title\">Common Usage</h2>\n\n    <div class=\"block\">\n      <h3 class=\"title\"><a class=\"anchor\" id=\"default\">#</a>Default</h3>\n      <div class=\"description\">\n        <p>Default to 24-hour format <code>HH:mm</code></p>\n      </div>\n      <div class=\"codes\">\n        <pre data-title=\"HTML\"><code v-el:ugdefault class=\"html\">&lt;vue-timepicker&gt;&lt;/vue-timepicker&gt;</code></pre>\n      </div>\n      <div class=\"preview\">\n        <vue-timepicker></vue-timepicker>\n      </div>\n    </div>\n\n    <div class=\"block\">\n      <h3 class=\"title\"><a class=\"anchor\" id=\"format12hours\">#</a>12 Hours</h3>\n      <div class=\"description\">\n        <p>By properly define the <code>format</code> string, you can set timepicker in form of 12 hours</p>\n      </div>\n      <div>\n        <div class=\"codes\">\n<pre data-title=\"HTML\">\n<code class=\"html\">&lt;!-- 12-hour sample 1 --&gt;\n&lt;vue-timepicker format=\"hh:mm A\"&gt;&lt;/vue-timepicker&gt;\n\n&lt;!-- 12-hour sample 2 --&gt;\n&lt;vue-timepicker format=\"h:m a\"&gt;&lt;/vue-timepicker&gt;\n</code>\n</pre>\n        </div>\n        <div class=\"preview\">\n          <b>12-hour sample 1</b>\n          <p>\n            <vue-timepicker format=\"hh:mm A\"></vue-timepicker>\n          </p>\n          <b>12-hour sample 2</b>\n          <p>\n            <vue-timepicker format=\"h:m a\"></vue-timepicker>\n          </p>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"block\">\n      <h3 class=\"title\"><a class=\"anchor\" id=\"seconds\">#</a>Seconds Picker</h3>\n      <div class=\"description\">\n        <p>You can trigger the seconds picker by adding <code>ss</code> or <code>s</code> in your format string.</p>\n      </div>\n      <div class=\"codes\">\n        <pre data-title=\"HTML\"><code class=\"html\">&lt;vue-timepicker format=\"HH:mm:ss\"&gt;&lt;/vue-timepicker&gt;</code></pre>\n      </div>\n      <div class=\"preview\">\n        <vue-timepicker format=\"HH:mm:ss\"></vue-timepicker>\n      </div>\n    </div>\n\n    <div class=\"block\">\n      <h3 class=\"title\"><a class=\"anchor\" id=\"interval\">#</a>Customized Interval</h3>\n      <div class=\"description\">\n        <p>Timepicker also allows you to display minutes or seconds picker with certain interval, like a 10-minute interval <code>0, 10, 20, ... 50, 60</code> for example</p>\n      </div>\n      <div class=\"codes\">\n<pre data-title=\"HTML\">\n<code class=\"html\">&lt;!-- 10-minute interval --&gt;\n&lt;vue-timepicker :minute-interval=\"10\"&gt;&lt;/vue-timepicker&gt;\n\n&lt;!-- 15-second interval --&gt;\n&lt;vue-timepicker format=\"HH:mm:ss\" :second-interval=\"15\"&gt;&lt;/vue-timepicker&gt;\n\n&lt;!-- 5-minute interval plus 10-second interval --&gt;\n&lt;vue-timepicker format=\"hh:mm:ss\" :minute-interval=\"5\" :second-interval=\"10\"&gt;&lt;/vue-timepicker&gt;\n</code>\n</pre>\n      </div>\n      <div class=\"preview\">\n        <b>10-minute interval</b>\n        <p>\n          <vue-timepicker :minute-interval=\"10\"></vue-timepicker>\n        </p>\n        <b>15-second interval</b>\n        <p>\n          <vue-timepicker format=\"HH:mm:ss\" :second-interval=\"15\"></vue-timepicker>\n        </p>\n        <b>5-minute interval plus 10-second interval</b>\n        <p>\n          <vue-timepicker format=\"hh:mm:ss\" :minute-interval=\"5\" :second-interval=\"10\"></vue-timepicker>\n        </p>\n      </div>\n    </div>\n\n    <div class=\"block\">\n      <h3 class=\"title\"><a class=\"anchor\" id=\"sync\">#</a>Sync Data</h3>\n      <div class=\"description\">\n        <p>Manipulate your timepicker's data as usual</p>\n      </div>\n      <div class=\"codes\">\n<pre data-title=\"JS\"><code class=\"javascript\">data: {\n  yourFormat: 'hh:mm:ss a',\n  yourData: {\n    hh: '03',\n    mm: '10',\n    ss: '00',\n    a: 'am'\n  }\n}</code></pre>\n      </div>\n      <div class=\"codes\">\n        <pre data-title=\"HTML\"><code class=\"html\">&lt;vue-timepicker :format=\"yourFormat\" :time-value.sync=\"yourData\"&gt;&lt;/vue-timepicker&gt;</code></pre>\n      </div>\n      <div>\n        <div class=\"preview\">\n          <vue-timepicker :format=\"yourFormat\" :time-value.sync=\"yourData\"></vue-timepicker>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"block\">\n      <h3 class=\"title\"><a class=\"anchor\" id=\"hideClearButton\">#</a>Hide Clear Button</h3>\n      <div class=\"description\">\n        <p>If you don't want to expose the clear button in the UI, <code>hide-clear-button</code> property will do the trick.</p>\n      </div>\n      <div class=\"codes\">\n        <pre data-title=\"HTML\"><code class=\"html\">&lt;vue-timepicker hide-clear-button&gt;&lt;/vue-timepicker&gt;</code></pre>\n      </div>\n      <div class=\"preview\">\n        <vue-timepicker hide-clear-button></vue-timepicker>\n      </div>\n    </div>\n\n    <div class=\"block\">\n      <h3 class=\"title\"><a class=\"anchor\" id=\"vForSample\">#</a>Work with <code>v-for</code></h3>\n      <div class=\"description\">\n        <p>Here's a quick sample of <code>v-for</code> usage</p>\n      </div>\n      <div class=\"codes\">\n<pre data-title=\"JS\"><code class=\"javascript\">data: {\n  yourDaysArray: [\n    {start_time: {HH: '08', mm: '00'}, end_time: {HH: '09', mm: '00'}},\n    {start_time: {HH: '15', mm: '00'}, end_time: {HH: '', mm: ''}},\n    {start_time: {HH: '', mm: ''}, end_time: {HH: '13', mm: '30'}},\n    {start_time: {HH: '', mm: ''}, end_time: {HH: '', mm: ''}}\n  ]\n}</code></pre>\n      </div>\n      <div class=\"codes\">\n<pre data-title=\"HTML\"><code class=\"html\">\n&lt;p v-for=\"day in yourDaysArray\"&gt;\n  &lt;label&gt;Day <span>{{</span> $index + 1 <span>}}</span>: &lt;/label&gt;\n  &lt;vue-timepicker :time-value.sync=\"day.start_time\"&gt;&lt;/vue-timepicker&gt;\n  &lt;span&gt; to &lt;/span&gt;\n  &lt;vue-timepicker :time-value.sync=\"day.end_time\"&gt;&lt;/vue-timepicker&gt;\n&lt;/p&gt;\n</code></pre>\n      </div>\n      <div class=\"preview\">\n        <p v-for=\"day in yourDaysArray\">\n          <label>Day {{ $index + 1 }}: </label>\n          <vue-timepicker :time-value.sync=\"day.start_time\"></vue-timepicker>\n          <span> to </span>\n          <vue-timepicker :time-value.sync=\"day.end_time\"></vue-timepicker>\n        </p>\n      </div>\n      <div class=\"codes\">\n<pre data-title=\"yourDaysArray JSON\"><code class=\"json\" v-text=\"yourDaysArray | json 2\">\n</code></pre>\n      </div>\n    </div>\n\n    <div class=\"block\">\n      <h3 class=\"title\"><a class=\"anchor\" id=\"onChangeSample\">#</a>The <code>change</code> Event</h3>\n      <div class=\"description\">\n        <p>The <code>change</code> event was introduced in v0.2.1. You can use <code>@change</code> to target and handle individual return data.</p>\n      </div>\n\n      <div class=\"codes\">\n<pre data-title=\"JS\"><code class=\"javascript\">\nmethods: {\n  // No argument\n  changeHandler (eventData) {\n    // eventData -> {data: {HH:..., mm:...}}\n  },\n\n  // Customized arguments\n  otherChangeHandler (eventData, arg1, arg2) {\n    // eventData -> [{data: {HH:..., mm:...}}]\n    // arg1 -> 'foo' or 'bar' in this demo\n    // arg2 -> 1 or 42 in this demo\n  }\n}\n</code></pre>\n      </div>\n\n      <div class=\"codes\">\n<pre data-title=\"HTML\"><code class=\"html\">&lt;!--\n[A] With `time-value` set\n--&gt;\n\n&lt;!-- A-1: No argument --&gt;\n&lt;vue-timepicker :time-value.sync=\"demoData1\" @change=\"changeHandler\"&gt;&lt;/vue-timepicker&gt;\n\n&lt;!-- A-2: Custom argument --&gt;\n&lt;vue-timepicker :time-value.sync=\"demoData2\" @change=\"otherChangeHandler($arguments, 'foo', 1)\"&gt;&lt;/vue-timepicker&gt;\n\n&lt;!--\n[B] No binding `time-value`\n--&gt;\n\n&lt;!-- B-1: No argument --&gt;\n&lt;vue-timepicker @change=\"changeHandler\"&gt;&lt;/vue-timepicker&gt;\n\n&lt;!-- B-2: Custom argument --&gt;\n&lt;vue-timepicker @change=\"otherChangeHandler($arguments, 'bar', 42)\"&gt;&lt;/vue-timepicker&gt;\n</code></pre>\n      </div>\n\n      <div class=\"preview\">\n        <p>\n          <b>[A] With `time-value` set, <code>change</code> event will only returns values in predefined format</b>\n        </p>\n\n        <b>A-1: No argument</b>\n        <p>\n          <vue-timepicker :time-value.sync=\"demoData1\" @change=\"changeHandler\"></vue-timepicker>\n        </p>\n\n        <b>A-2: Custom argument ('foo', 1)</b>\n        <p>\n          <vue-timepicker :time-value.sync=\"demoData2\" @change=\"otherChangeHandler($arguments, 'foo', 1)\"></vue-timepicker>\n        </p>\n\n        <p>\n          <b>[B] No binding `time-value`, full value data will be returned</b>\n        </p>\n\n        <b>B-1: No argument</b>\n        <p>\n          <vue-timepicker @change=\"changeHandler\"></vue-timepicker>\n        </p>\n\n        <b>B-2: Custom argument ('bar', 42)</b>\n        <p>\n          <vue-timepicker @change=\"otherChangeHandler($arguments, 'bar', 42)\"></vue-timepicker>\n        </p>\n\n      </div>\n\n      <div class=\"codes\" v-if=\"demoArgs\">\n<pre data-title=\"Custom Arguments\"><code class=\"javascript\" v-text=\"demoArgs | json\">\n</code></pre>\n      </div>\n\n      <div class=\"codes\" v-if=\"latestDataFlow\">\n<pre data-title=\"Latest eventData\"><code class=\"javascript\" v-text=\"latestDataFlow | json\">\n</code></pre>\n      </div>\n\n    </div>\n\n    <div class=\"block footer-links\">\n      <slot name=\"footer-links\"></slot>\n    </div>\n\n  </section>\n</template>\n\n\n\n/** WEBPACK FOOTER **\n ** Samples.vue?882bebea\n **/","<script type=\"text/ecmascript-6\">\nconst CONFIG = {\n  HOUR_TOKENS: ['HH', 'H', 'hh', 'h', 'kk', 'k'],\n  MINUTE_TOKENS: ['mm', 'm'],\n  SECOND_TOKENS: ['ss', 's'],\n  APM_TOKENS: ['A', 'a']\n}\n\nexport default {\n  name: 'VueTimepicker',\n\n  props: {\n    timeValue: {type: Object, twoWay: true},\n    hideClearButton: {type: Boolean},\n    format: {type: String},\n    minuteInterval: {type: Number},\n    secondInterval: {type: Number},\n    id: {type: String}\n  },\n\n  data () {\n    return {\n      hours: [],\n      minutes: [],\n      seconds: [],\n      apms: [],\n      showDropdown: false,\n      muteWatch: false,\n      hourType: 'HH',\n      minuteType: 'mm',\n      secondType: '',\n      apmType: '',\n      hour: '',\n      minute: '',\n      second: '',\n      apm: '',\n      fullValues: undefined\n    }\n  },\n\n  computed: {\n    displayTime () {\n      let formatString = String((this.format || 'HH:mm'))\n      if (this.hour) {\n        formatString = formatString.replace(new RegExp(this.hourType, 'g'), this.hour)\n      }\n      if (this.minute) {\n        formatString = formatString.replace(new RegExp(this.minuteType, 'g'), this.minute)\n      }\n      if (this.second && this.secondType) {\n        formatString = formatString.replace(new RegExp(this.secondType, 'g'), this.second)\n      }\n      if (this.apm && this.apmType) {\n        formatString = formatString.replace(new RegExp(this.apmType, 'g'), this.apm)\n      }\n      return formatString\n    },\n\n    showClearBtn () {\n      if ((this.hour && this.hour !== '') || (this.minute && this.minute !== '')) {\n        return true\n      }\n      return false\n    }\n  },\n\n  watch: {\n    'format': 'renderFormat',\n    minuteInterval (newInteval) {\n      this.renderList('minute', newInteval)\n    },\n    secondInterval (newInteval) {\n      this.renderList('second', newInteval)\n    },\n    'timeValue': 'readValues',\n    'displayTime': 'fillValues'\n  },\n\n  methods: {\n    formatValue (type, i) {\n      switch (type) {\n        case 'H':\n        case 'm':\n        case 's':\n          return String(i)\n        case 'HH':\n        case 'mm':\n        case 'ss':\n          return i < 10 ? `0${i}` : String(i)\n        case 'h':\n        case 'k':\n          return String(i + 1)\n        case 'hh':\n        case 'kk':\n          return (i + 1) < 10 ? `0${i + 1}` : String(i + 1)\n        default:\n          return ''\n      }\n    },\n\n    checkAcceptingType (validValues, formatString, fallbackValue) {\n      if (!validValues || !formatString || !formatString.length) { return '' }\n      for (let i = 0; i < validValues.length; i++) {\n        if (formatString.indexOf(validValues[i]) > -1) {\n          return validValues[i]\n        }\n      }\n      return fallbackValue || ''\n    },\n\n    renderFormat (newFormat) {\n      newFormat = newFormat || this.format\n      if (!newFormat || !newFormat.length) {\n        newFormat = 'HH:mm'\n      }\n\n      this.hourType = this.checkAcceptingType(CONFIG.HOUR_TOKENS, newFormat, 'HH')\n      this.minuteType = this.checkAcceptingType(CONFIG.MINUTE_TOKENS, newFormat, 'mm')\n      this.secondType = this.checkAcceptingType(CONFIG.SECOND_TOKENS, newFormat)\n      this.apmType = this.checkAcceptingType(CONFIG.APM_TOKENS, newFormat)\n\n      this.renderHoursList()\n      this.renderList('minute')\n\n      if (this.secondType) {\n        this.renderList('second')\n      }\n\n      if (this.apmType) {\n        this.renderApmList()\n      }\n\n      const self = this\n      this.$nextTick(() => {\n        self.readValues()\n      })\n    },\n\n    renderHoursList () {\n      const hoursCount = (this.hourType === 'h' || this.hourType === 'hh') ? 12 : 24\n      this.hours = []\n      for (let i = 0; i < hoursCount; i++) {\n        this.hours.push(this.formatValue(this.hourType, i))\n      }\n    },\n\n    renderList (listType, interval) {\n      if (listType === 'second') {\n        interval = interval || this.secondInterval\n      } else if (listType === 'minute') {\n        interval = interval || this.minuteInterval\n      } else {\n        return\n      }\n\n      if (interval === 0) {\n        interval = 60\n      } else if (interval > 60) {\n        window.console.warn('`' + listType + '-interval` should be less than 60. Current value is', interval)\n        interval = 1\n      } else if (interval < 1) {\n        window.console.warn('`' + listType + '-interval` should be NO less than 1. Current value is', interval)\n        interval = 1\n      } else if (!interval) {\n        interval = 1\n      }\n\n      if (listType === 'minute') {\n        this.minutes = []\n      } else {\n        this.seconds = []\n      }\n\n      for (let i = 0; i < 60; i += interval) {\n        if (listType === 'minute') {\n          this.minutes.push(this.formatValue(this.minuteType, i))\n        } else {\n          this.seconds.push(this.formatValue(this.secondType, i))\n        }\n      }\n    },\n\n    renderApmList () {\n      this.apms = []\n      if (!this.apmType) { return }\n      this.apms = this.apmType === 'A' ? ['AM', 'PM'] : ['am', 'pm']\n    },\n\n    readValues () {\n      if (!this.timeValue || this.muteWatch) { return }\n\n      const timeValue = JSON.parse(JSON.stringify(this.timeValue || {}))\n      const values = Object.keys(timeValue)\n      if (values.length === 0) { return }\n\n      if (values.indexOf(this.hourType) > -1) {\n        this.hour = timeValue[this.hourType]\n      }\n\n      if (values.indexOf(this.minuteType) > -1) {\n        this.minute = timeValue[this.minuteType]\n      }\n\n      if (values.indexOf(this.secondType) > -1) {\n        this.second = timeValue[this.secondType]\n      } else {\n        this.second = 0\n      }\n\n      if (values.indexOf(this.apmType) > -1) {\n        this.apm = timeValue[this.apmType]\n      }\n\n      this.fillValues()\n    },\n\n    fillValues () {\n      let fullValues = {}\n\n      const baseHour = this.hour\n      const baseHourType = this.hourType\n\n      const hourValue = baseHour || baseHour === 0 ? Number(baseHour) : ''\n      const baseOnTwelveHours = this.isTwelveHours(baseHourType)\n      const apmValue = (baseOnTwelveHours && this.apm) ? String(this.apm).toLowerCase() : false\n\n      CONFIG.HOUR_TOKENS.forEach((token) => {\n        if (token === baseHourType) {\n          fullValues[token] = baseHour\n          return\n        }\n\n        let value\n        let apm\n        switch (token) {\n          case 'H':\n          case 'HH':\n            if (!String(hourValue).length) {\n              fullValues[token] = ''\n              return\n            } else if (baseOnTwelveHours) {\n              if (apmValue === 'pm') {\n                value = hourValue < 12 ? hourValue + 12 : hourValue\n              } else {\n                value = hourValue % 12\n              }\n            } else {\n              value = hourValue % 24\n            }\n            fullValues[token] = (token === 'HH' && value < 10) ? `0${value}` : String(value)\n            break\n          case 'k':\n          case 'kk':\n            if (!String(hourValue).length) {\n              fullValues[token] = ''\n              return\n            } else if (baseOnTwelveHours) {\n              if (apmValue === 'pm') {\n                value = hourValue < 12 ? hourValue + 12 : hourValue\n              } else {\n                value = hourValue === 12 ? 24 : hourValue\n              }\n            } else {\n              value = hourValue === 0 ? 24 : hourValue\n            }\n            fullValues[token] = (token === 'kk' && value < 10) ? `0${value}` : String(value)\n            break\n          case 'h':\n          case 'hh':\n            if (apmValue) {\n              value = hourValue\n              apm = apmValue || 'am'\n            } else {\n              if (!String(hourValue).length) {\n                fullValues[token] = ''\n                fullValues.a = ''\n                fullValues.A = ''\n                return\n              } else if (hourValue > 11) {\n                apm = 'pm'\n                value = hourValue === 12 ? 12 : hourValue % 12\n              } else {\n                if (baseOnTwelveHours) {\n                  apm = ''\n                } else {\n                  apm = 'am'\n                }\n                value = hourValue % 12 === 0 ? 12 : hourValue\n              }\n            }\n            fullValues[token] = (token === 'hh' && value < 10) ? `0${value}` : String(value)\n            fullValues.a = apm\n            fullValues.A = apm.toUpperCase()\n            break\n        }\n      })\n\n      if (this.minute || this.minute === 0) {\n        const minuteValue = Number(this.minute)\n        fullValues.m = String(minuteValue)\n        fullValues.mm = minuteValue < 10 ? `0${minuteValue}` : String(minuteValue)\n      } else {\n        fullValues.m = ''\n        fullValues.mm = ''\n      }\n\n      if (this.second || this.second === 0) {\n        const secondValue = Number(this.second)\n        fullValues.s = String(secondValue)\n        fullValues.ss = secondValue < 10 ? `0${secondValue}` : String(secondValue)\n      } else {\n        fullValues.s = ''\n        fullValues.ss = ''\n      }\n\n      this.fullValues = fullValues\n      this.updateTimeValue(fullValues)\n      this.$dispatch('vue-timepicker-update', fullValues)\n    },\n\n    updateTimeValue (fullValues) {\n      if (!this.timeValue) {\n        // return the `fullValues` if `timeValue` is not set\n        this.$dispatch('change', {data: fullValues})\n        return\n      }\n\n      this.muteWatch = true\n\n      const baseTimeValue = JSON.parse(JSON.stringify(this.timeValue || {}))\n      let timeValue = {}\n      Object.keys(baseTimeValue).forEach((key) => {\n        timeValue[key] = fullValues[key]\n      })\n      this.timeValue = timeValue\n\n      const self = this\n      this.$nextTick(() => {\n        self.muteWatch = false\n        self.$dispatch('change', {data: self.timeValue})\n      })\n    },\n\n    isTwelveHours (token) {\n      return token === 'h' || token === 'hh'\n    },\n\n    toggleDropdown () {\n      this.showDropdown = !this.showDropdown\n    },\n\n    select (type, value) {\n      if (type === 'hour') {\n        this.hour = value\n      } else if (type === 'minute') {\n        this.minute = value\n      } else if (type === 'second') {\n        this.second = value\n      } else if (type === 'apm') {\n        this.apm = value\n      }\n    },\n\n    clearTime () {\n      this.hour = ''\n      this.minute = ''\n      this.second = ''\n      this.apm = ''\n    }\n  },\n\n  ready () {\n    this.renderFormat()\n  }\n}\n</script>\n\n<template>\n<span class=\"time-picker\">\n  <input class=\"display-time\" v-model=\"displayTime\" :id=\"id\" @click.stop=\"toggleDropdown\" type=\"text\" readonly />\n  <span class=\"clear-btn\" v-if=\"!hideClearButton\" v-show=\"!showDropdown && showClearBtn\" @click.stop=\"clearTime\">&times;</span>\n  <div class=\"time-picker-overlay\" v-if=\"showDropdown\" @click.stop=\"toggleDropdown\"></div>\n  <div class=\"dropdown\" v-show=\"showDropdown\">\n    <div class=\"select-list\">\n      <ul class=\"hours\">\n        <li class=\"hint\" v-text=\"hourType\"></li>\n        <li v-for=\"hr in hours\" v-text=\"hr\" :class=\"{active: hour === hr}\" @click.stop=\"select('hour', hr)\"></li>\n      </ul>\n      <ul class=\"minutes\">\n        <li class=\"hint\" v-text=\"minuteType\"></li>\n        <li v-for=\"m in minutes\" v-text=\"m\" :class=\"{active: minute === m}\" @click.stop=\"select('minute', m)\"></li>\n      </ul>\n      <ul class=\"seconds\" v-if=\"secondType\">\n        <li class=\"hint\" v-text=\"secondType\"></li>\n        <li v-for=\"s in seconds\" v-text=\"s\" :class=\"{active: second === s}\" @click.stop=\"select('second', s)\"></li>\n      </ul>\n      <ul class=\"apms\" v-if=\"apmType\">\n        <li class=\"hint\" v-text=\"apmType\"></li>\n        <li v-for=\"a in apms\" v-text=\"a\" :class=\"{active: apm === a}\" @click.stop=\"select('apm', a)\"></li>\n      </ul>\n    </div>\n  </div>\n</span>\n</template>\n\n<style>\n@import './style/vue-timepicker.css';\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** vue-timepicker.vue?c11fd542\n **/","module.exports = \" <div class=main-wrapper> <header v-cloak> <h1>Vue Timepicker</h1> <p>A dropdown time picker for <span class=version>Vue 1.x</span> with flexible time format support</p> </header> <nav class=top-nav :class=\\\"{stick: scrollTop > 150}\\\"> <span class=title>Vue Timepicker</span> <ul> <li><a @click=\\\"switchView('samples')\\\" :class=\\\"{active: currentView === 'samples'}\\\">Common Usage</a></li> <li><a @click=\\\"switchView('playground')\\\" :class=\\\"{active: currentView === 'playground'}\\\">Playground</a></li> <li><a href=https://github.com/phoenixwong/vue-timepicker target=_blank>Documentation</a></li> </ul> <span class=v2x><a href=https://phoenixwong.github.io/vue2-timepicker/ target=_blank>Vue 2.x Version</a> &raquo;</span> </nav> <main class=content :class=\\\"{'nav-affixed': scrollTop > 150}\\\"> <component :is=currentView transition=fade transition-mode=out-in> <div slot=footer-links> <h3 class=title><a class=anchor id=more>#</a>More complex usage</h3> <div class=description> <p>Didn't find what you need? Please check the <a @click=\\\"switchView('playground')\\\">Playground</a> or <a href=https://github.com/phoenixwong/vue-timepicker target=_blank>Documentation</a> for more inspiration.</p> </div> </div> </component> </main> </div> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./demo/App.vue\n ** module id = 45\n ** module chunks = 2\n **/","module.exports = \" <section id=playground> <main> <h2 class=section-title>Timepicker Playground</h2> <div id=configPanel> <div class=config-block id=typesSelection> <h3 class=subtitle><a class=anchor>#</a>Generate <code>format</code> string</h3> <div class=config-row> <label class=row-label>Hour:</label> <label class=options v-for=\\\"htype in tokens.hour\\\" :for=\\\"'hour_type' + $index\\\"> <input v-model=type.hour @click=updateHourRange(htype) :value=htype :id=\\\"'hour_type' + $index\\\" type=radio name=hour_type /> {{htype}} </label> </div> <div class=config-row> <label class=row-label>Minute:</label> <label class=options v-for=\\\"mtype in tokens.minute\\\" :for=\\\"'minute_type' + $index\\\"> <input v-model=type.minute :value=mtype :id=\\\"'minute_type' + $index\\\" type=radio name=minute_type /> {{mtype}} </label> </div> <div class=config-row> <label class=row-label>Second:</label> <label class=options v-for=\\\"stype in tokens.second\\\" :for=\\\"'second_type' + $index\\\"> <input v-model=type.second :value=stype :id=\\\"'second_type' + $index\\\" type=radio name=second_type /> {{stype}} </label> </div> <div class=config-row v-if=needApm> <label class=row-label>AM/PM:</label> <label class=options v-for=\\\"atype in tokens.apm\\\" :for=\\\"'apm_type' + $index\\\"> <input v-model=type.apm :value=atype :id=\\\"'apm_type' + $index\\\" type=radio name=apm_type /> {{atype}} </label> </div> </div> <div class=config-block> <h3 class=subtitle><a class=anchor>#</a>Customized Interval</h3> <div class=\\\"config-row group\\\"> <label> <input v-model=customInterval.minute type=checkbox /> Minute Interval </label> <label v-if=customInterval.minute class=range-wrapper> <input v-model=interval.minute type=range min=0 max=60 step=1 /> <span v-text=interval.minute></span> </label> </div> <div class=\\\"config-row group\\\"> <label> <input v-model=customInterval.second type=checkbox /> Second Interval </label> <label v-if=customInterval.second class=range-wrapper> <input v-model=interval.second type=range min=0 max=60 step=1 /> <span v-text=interval.second></span> </label> </div> </div> <div class=config-block> <h3 class=subtitle><a class=anchor>#</a>Clear Button</h3> <div class=\\\"config-row group\\\"> <label for=enable_btn_true> <input v-model=enableClearBtn type=radio id=enable_btn_true name=enable_btn :value=true /> Enable </label> <label for=enable_btn_false> <input v-model=enableClearBtn type=radio id=enable_btn_false name=enable_btn :value=false /> Disable </label> </div> </div> <div class=codes> <pre data-title=HTML><code v-el:pghtml class=html v-text=htmlCode></code></pre> </div> <div class=config-block id=valuesSelection> <h3 class=subtitle><a class=anchor>#</a>Bind <code>time-value</code> data</h3> <div class=config-row> <label class=row-label>Hour:</label> <label class=options> <input v-model=selected.hour type=range :min=hourRange.min :max=hourRange.max step=1 /> <span v-text=selected.hour></span> </label> </div> <div class=config-row> <label class=row-label>Minute:</label> <label class=options> <input v-model=selected.minute type=range min=0 max=59 :step=interval.minute /> <span v-text=selected.minute></span> </label> </div> <div v-if=\\\"type.second !== 'none'\\\" class=config-row> <label class=row-label>Second:</label> <label class=options> <input v-model=selected.second type=range min=0 max=59 :step=interval.second /> <span v-text=selected.second></span> </label> </div> <div v-if=needApm :class=\\\"{capitailized: type.apm === 'A'}\\\" class=config-row> <label class=row-label>AM/PM:</label> <label class=options for=selected_apm_am> <input v-model=selected.apm type=radio id=selected_apm_am name=selected_apm value=am /> am </label> <label class=options for=selected_apm_pm> <input v-model=selected.apm type=radio id=selected_apm_pm name=selected_apm value=pm /> pm </label> </div> </div> <div class=codes> <pre data-title=JS><code v-el:pgdata class=javascript v-text=yourTimeValue></code></pre> </div> <div class=codes> <pre data-title=HTML><code v-el:pghtmlvar class=html v-text=htmlCodeWithVar></code></pre> </div> </div> </main> <aside class=previews :style=asideStyle()> <div id=playgroundPreview class=preview> <b>Format string: </b> <span v-text=formatString></span> <p> <vue-timepicker :format=formatString :time-value.sync=playgroundData :minute-interval=interval.minute :second-interval=interval.second :hide-clear-button=!enableClearBtn></vue-timepicker> </p> </div> <div id=dispatchedValue class=codes> <pre data-title=vue-timepicker-update><code v-el:pgvalue class=json v-text=\\\"playgroundFullValue | json 2\\\"></code></pre> </div> </aside> </section> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./demo/components/Playground.vue\n ** module id = 46\n ** module chunks = 2\n **/","module.exports = \" <section id=mostlyUsedSamples> <h2 class=section-title>Common Usage</h2> <div class=block> <h3 class=title><a class=anchor id=default>#</a>Default</h3> <div class=description> <p>Default to 24-hour format <code>HH:mm</code></p> </div> <div class=codes> <pre data-title=HTML><code v-el:ugdefault class=html>&lt;vue-timepicker&gt;&lt;/vue-timepicker&gt;</code></pre> </div> <div class=preview> <vue-timepicker></vue-timepicker> </div> </div> <div class=block> <h3 class=title><a class=anchor id=format12hours>#</a>12 Hours</h3> <div class=description> <p>By properly define the <code>format</code> string, you can set timepicker in form of 12 hours</p> </div> <div> <div class=codes> <pre data-title=HTML>\\n<code class=html>&lt;!-- 12-hour sample 1 --&gt;\\n&lt;vue-timepicker format=\\\"hh:mm A\\\"&gt;&lt;/vue-timepicker&gt;\\n\\n&lt;!-- 12-hour sample 2 --&gt;\\n&lt;vue-timepicker format=\\\"h:m a\\\"&gt;&lt;/vue-timepicker&gt;\\n</code>\\n</pre> </div> <div class=preview> <b>12-hour sample 1</b> <p> <vue-timepicker format=\\\"hh:mm A\\\"></vue-timepicker> </p> <b>12-hour sample 2</b> <p> <vue-timepicker format=\\\"h:m a\\\"></vue-timepicker> </p> </div> </div> </div> <div class=block> <h3 class=title><a class=anchor id=seconds>#</a>Seconds Picker</h3> <div class=description> <p>You can trigger the seconds picker by adding <code>ss</code> or <code>s</code> in your format string.</p> </div> <div class=codes> <pre data-title=HTML><code class=html>&lt;vue-timepicker format=\\\"HH:mm:ss\\\"&gt;&lt;/vue-timepicker&gt;</code></pre> </div> <div class=preview> <vue-timepicker format=HH:mm:ss></vue-timepicker> </div> </div> <div class=block> <h3 class=title><a class=anchor id=interval>#</a>Customized Interval</h3> <div class=description> <p>Timepicker also allows you to display minutes or seconds picker with certain interval, like a 10-minute interval <code>0, 10, 20, ... 50, 60</code> for example</p> </div> <div class=codes> <pre data-title=HTML>\\n<code class=html>&lt;!-- 10-minute interval --&gt;\\n&lt;vue-timepicker :minute-interval=\\\"10\\\"&gt;&lt;/vue-timepicker&gt;\\n\\n&lt;!-- 15-second interval --&gt;\\n&lt;vue-timepicker format=\\\"HH:mm:ss\\\" :second-interval=\\\"15\\\"&gt;&lt;/vue-timepicker&gt;\\n\\n&lt;!-- 5-minute interval plus 10-second interval --&gt;\\n&lt;vue-timepicker format=\\\"hh:mm:ss\\\" :minute-interval=\\\"5\\\" :second-interval=\\\"10\\\"&gt;&lt;/vue-timepicker&gt;\\n</code>\\n</pre> </div> <div class=preview> <b>10-minute interval</b> <p> <vue-timepicker :minute-interval=10></vue-timepicker> </p> <b>15-second interval</b> <p> <vue-timepicker format=HH:mm:ss :second-interval=15></vue-timepicker> </p> <b>5-minute interval plus 10-second interval</b> <p> <vue-timepicker format=hh:mm:ss :minute-interval=5 :second-interval=10></vue-timepicker> </p> </div> </div> <div class=block> <h3 class=title><a class=anchor id=sync>#</a>Sync Data</h3> <div class=description> <p>Manipulate your timepicker's data as usual</p> </div> <div class=codes> <pre data-title=JS><code class=javascript>data: {\\n  yourFormat: 'hh:mm:ss a',\\n  yourData: {\\n    hh: '03',\\n    mm: '10',\\n    ss: '00',\\n    a: 'am'\\n  }\\n}</code></pre> </div> <div class=codes> <pre data-title=HTML><code class=html>&lt;vue-timepicker :format=\\\"yourFormat\\\" :time-value.sync=\\\"yourData\\\"&gt;&lt;/vue-timepicker&gt;</code></pre> </div> <div> <div class=preview> <vue-timepicker :format=yourFormat :time-value.sync=yourData></vue-timepicker> </div> </div> </div> <div class=block> <h3 class=title><a class=anchor id=hideClearButton>#</a>Hide Clear Button</h3> <div class=description> <p>If you don't want to expose the clear button in the UI, <code>hide-clear-button</code> property will do the trick.</p> </div> <div class=codes> <pre data-title=HTML><code class=html>&lt;vue-timepicker hide-clear-button&gt;&lt;/vue-timepicker&gt;</code></pre> </div> <div class=preview> <vue-timepicker hide-clear-button></vue-timepicker> </div> </div> <div class=block> <h3 class=title><a class=anchor id=vForSample>#</a>Work with <code>v-for</code></h3> <div class=description> <p>Here's a quick sample of <code>v-for</code> usage</p> </div> <div class=codes> <pre data-title=JS><code class=javascript>data: {\\n  yourDaysArray: [\\n    {start_time: {HH: '08', mm: '00'}, end_time: {HH: '09', mm: '00'}},\\n    {start_time: {HH: '15', mm: '00'}, end_time: {HH: '', mm: ''}},\\n    {start_time: {HH: '', mm: ''}, end_time: {HH: '13', mm: '30'}},\\n    {start_time: {HH: '', mm: ''}, end_time: {HH: '', mm: ''}}\\n  ]\\n}</code></pre> </div> <div class=codes> <pre data-title=HTML><code class=html>\\n&lt;p v-for=\\\"day in yourDaysArray\\\"&gt;\\n  &lt;label&gt;Day <span>{{</span> $index + 1 <span>}}</span>: &lt;/label&gt;\\n  &lt;vue-timepicker :time-value.sync=\\\"day.start_time\\\"&gt;&lt;/vue-timepicker&gt;\\n  &lt;span&gt; to &lt;/span&gt;\\n  &lt;vue-timepicker :time-value.sync=\\\"day.end_time\\\"&gt;&lt;/vue-timepicker&gt;\\n&lt;/p&gt;\\n</code></pre> </div> <div class=preview> <p v-for=\\\"day in yourDaysArray\\\"> <label>Day {{ $index + 1 }}: </label> <vue-timepicker :time-value.sync=day.start_time></vue-timepicker> <span> to </span> <vue-timepicker :time-value.sync=day.end_time></vue-timepicker> </p> </div> <div class=codes> <pre data-title=\\\"yourDaysArray JSON\\\"><code class=json v-text=\\\"yourDaysArray | json 2\\\">\\n</code></pre> </div> </div> <div class=block> <h3 class=title><a class=anchor id=onChangeSample>#</a>The <code>change</code> Event</h3> <div class=description> <p>The <code>change</code> event was introduced in v0.2.1. You can use <code>@change</code> to target and handle individual return data.</p> </div> <div class=codes> <pre data-title=JS><code class=javascript>\\nmethods: {\\n  // No argument\\n  changeHandler (eventData) {\\n    // eventData -> {data: {HH:..., mm:...}}\\n  },\\n\\n  // Customized arguments\\n  otherChangeHandler (eventData, arg1, arg2) {\\n    // eventData -> [{data: {HH:..., mm:...}}]\\n    // arg1 -> 'foo' or 'bar' in this demo\\n    // arg2 -> 1 or 42 in this demo\\n  }\\n}\\n</code></pre> </div> <div class=codes> <pre data-title=HTML><code class=html>&lt;!--\\n[A] With `time-value` set\\n--&gt;\\n\\n&lt;!-- A-1: No argument --&gt;\\n&lt;vue-timepicker :time-value.sync=\\\"demoData1\\\" @change=\\\"changeHandler\\\"&gt;&lt;/vue-timepicker&gt;\\n\\n&lt;!-- A-2: Custom argument --&gt;\\n&lt;vue-timepicker :time-value.sync=\\\"demoData2\\\" @change=\\\"otherChangeHandler($arguments, 'foo', 1)\\\"&gt;&lt;/vue-timepicker&gt;\\n\\n&lt;!--\\n[B] No binding `time-value`\\n--&gt;\\n\\n&lt;!-- B-1: No argument --&gt;\\n&lt;vue-timepicker @change=\\\"changeHandler\\\"&gt;&lt;/vue-timepicker&gt;\\n\\n&lt;!-- B-2: Custom argument --&gt;\\n&lt;vue-timepicker @change=\\\"otherChangeHandler($arguments, 'bar', 42)\\\"&gt;&lt;/vue-timepicker&gt;\\n</code></pre> </div> <div class=preview> <p> <b>[A] With `time-value` set, <code>change</code> event will only returns values in predefined format</b> </p> <b>A-1: No argument</b> <p> <vue-timepicker :time-value.sync=demoData1 @change=changeHandler></vue-timepicker> </p> <b>A-2: Custom argument ('foo', 1)</b> <p> <vue-timepicker :time-value.sync=demoData2 @change=\\\"otherChangeHandler($arguments, 'foo', 1)\\\"></vue-timepicker> </p> <p> <b>[B] No binding `time-value`, full value data will be returned</b> </p> <b>B-1: No argument</b> <p> <vue-timepicker @change=changeHandler></vue-timepicker> </p> <b>B-2: Custom argument ('bar', 42)</b> <p> <vue-timepicker @change=\\\"otherChangeHandler($arguments, 'bar', 42)\\\"></vue-timepicker> </p> </div> <div class=codes v-if=demoArgs> <pre data-title=\\\"Custom Arguments\\\"><code class=javascript v-text=\\\"demoArgs | json\\\">\\n</code></pre> </div> <div class=codes v-if=latestDataFlow> <pre data-title=\\\"Latest eventData\\\"><code class=javascript v-text=\\\"latestDataFlow | json\\\">\\n</code></pre> </div> </div> <div class=\\\"block footer-links\\\"> <slot name=footer-links></slot> </div> </section> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./demo/components/Samples.vue\n ** module id = 47\n ** module chunks = 2\n **/","module.exports = \" <span class=time-picker> <input class=display-time v-model=displayTime :id=id @click.stop=toggleDropdown type=text readonly=readonly /> <span class=clear-btn v-if=!hideClearButton v-show=\\\"!showDropdown && showClearBtn\\\" @click.stop=clearTime>&times;</span> <div class=time-picker-overlay v-if=showDropdown @click.stop=toggleDropdown></div> <div class=dropdown v-show=showDropdown> <div class=select-list> <ul class=hours> <li class=hint v-text=hourType></li> <li v-for=\\\"hr in hours\\\" v-text=hr :class=\\\"{active: hour === hr}\\\" @click.stop=\\\"select('hour', hr)\\\"></li> </ul> <ul class=minutes> <li class=hint v-text=minuteType></li> <li v-for=\\\"m in minutes\\\" v-text=m :class=\\\"{active: minute === m}\\\" @click.stop=\\\"select('minute', m)\\\"></li> </ul> <ul class=seconds v-if=secondType> <li class=hint v-text=secondType></li> <li v-for=\\\"s in seconds\\\" v-text=s :class=\\\"{active: second === s}\\\" @click.stop=\\\"select('second', s)\\\"></li> </ul> <ul class=apms v-if=apmType> <li class=hint v-text=apmType></li> <li v-for=\\\"a in apms\\\" v-text=a :class=\\\"{active: apm === a}\\\" @click.stop=\\\"select('apm', a)\\\"></li> </ul> </div> </div> </span> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/vue-timepicker.vue\n ** module id = 48\n ** module chunks = 2\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../node_modules/vue-loader/lib/style-rewriter.js!sass-loader?indentedSyntax&sourceMap!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./App.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../node_modules/vue-loader/lib/selector.js?type=script&index=0!./App.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../node_modules/vue-loader/lib/selector.js?type=template&index=0!./App.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./demo/App.vue\n ** module id = 49\n ** module chunks = 2\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Playground.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Playground.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./demo/components/Playground.vue\n ** module id = 50\n ** module chunks = 2\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Samples.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Samples.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./demo/components/Samples.vue\n ** module id = 51\n ** module chunks = 2\n **/"],"sourceRoot":""}