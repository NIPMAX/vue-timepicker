{"version":3,"sources":["webpack:///static/js/app.779ceb0c23416ce48a89.js","webpack:///./demo/main.js","webpack:///./src/vue-timepicker.vue","webpack:///App.vue","webpack:///Playground.vue","webpack:///Samples.vue","webpack:///vue-timepicker.vue","webpack:///./demo/App.vue?b123","webpack:///./demo/components/Playground.vue?02a2","webpack:///./demo/components/Samples.vue?79a0","webpack:///./src/vue-timepicker.vue?1479","webpack:///./demo/App.vue","webpack:///./demo/components/Playground.vue","webpack:///./demo/components/Samples.vue"],"names":["webpackJsonp","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","_vue","_vue2","_App","_App2","el","components","App","__vue_script__","__vue_template__","options","template","Object","defineProperty","value","scrollHandler","_Samples","_Samples2","_Playground","_Playground2","name","samples","playground","data","currentView","scrollTop","ready","self","this","evt","target","scrollingElement","window","addEventListener","beforeDestroy","removeEventListener","_keys","_keys2","_vueTimepicker","_vueTimepicker2","tokens","hour","minute","second","apm","type","selected","hourRange","min","max","interval","customInterval","enableClearBtn","playgroundData","playgroundFullValue","computed","formatString","needApm","htmlCode","start","end","htmlCodeWithVar","newEnd","replace","refreshHighlight","yourTimeValue","code","listTimeValue","watch","deep","handler","isNeeded","custom","methods","updateHourRange","hourType","handleOutRangeData","formatValue","String","updatePlaygroundData","toUpperCase","len","length","string","forEach","k","i","elm","$nextTick","hljs","highlightBlock","$els","asideStyle","initPaddingTop","minPaddingTop","paddingTop","Math","events","vue-timepicker-update","attached","initHighlightingOnLoad","yourData","hh","mm","ss","a","yourFormat","refreshAllHighlight","$el","codeBlocks","querySelectorAll","block","compiled","CONFIG","HOUR_TOKENS","MINUTE_TOKENS","SECOND_TOKENS","APM_TOKENS","props","timeValue","twoWay","hideClearButton","Boolean","format","minuteInterval","Number","secondInterval","hours","minutes","seconds","apms","showDropdown","minuteType","secondType","apmType","fullValues","undefined","displayTime","RegExp","newInteval","renderList","checkAcceptingType","validValues","fallbackValue","indexOf","renderFormat","newFormat","renderHoursList","renderApmList","readValues","hoursCount","push","listType","console","warn","values","fillValues","baseHour","baseHourType","hourValue","baseOnTwelveHours","isTwelveHours","apmValue","toLowerCase","token","A","minuteValue","m","secondValue","s","$dispatch","toggleDropdown","select","showClearBtn","clearTime"],"mappings":"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QtC,KI7GfuC,gBJ8GOD,GI7GP,YJ8GOA,GI7GP,QJ8GOA,GI7GP,MJkHGE,OACEtB,UACEuB,MI7GP,EJ8GOC,QI3GP,wBJ8GKzB,MACEwB,MI7GP,EJ8GOC,QI3GP,wBJ8GKb,QAAW,SAAiBc,GACtBA,EACG3C,KAAKkB,SAASF,MACjBhB,KAAKiB,KAAKD,II7GrB,IJ8GWhB,KAAKkB,SAASF,II7GzB,OJgHShB,KAAKiB,KAAKD,II7GnB,GJ8GShB,KAAKkB,SAASF,II7GvB,KJiHKO,gBACEkB,MI7GP,EJ8GOC,QAAS,SAAiBE,GACnBA,EAAO9B,SACVd,KAAKsB,SAASR,OI7GzB,GJ+Gc8B,EAAO7B,SACVf,KAAKsB,SAASP,OI7GzB,MJmHG8B,SACEC,gBAAiB,SAAyBC,GACxCA,EAAWA,GAAY/C,KAAKiB,KI7GnCJ,IJ8GO,IAAIM,KACJ,QI7GP4B,GJ8GS,II7GT,IJ8GS,II7GT,KJ8GW5B,EAAUC,II7GrB,EJ8GWD,EAAUE,II7GrB,EACA,MJ8GS,KI7GT,IJ8GS,II7GT,KJ8GWF,EAAUC,II7GrB,EJ8GWD,EAAUE,II7GrB,EACA,MJ8GS,KI7GT,IJ8GS,II7GT,KJ8GWF,EAAUC,II7GrB,EJ8GWD,EAAUE,II7GrB,GJgHOrB,KAAKmB,UI7GZA,EJ8GOnB,KI7GPgD,sBJ+GKA,mBAAoB,WACdhD,KAAKkB,SAASL,KAAOb,KAAKmB,UAAUE,IACtCrB,KAAKkB,SAASL,KAAOb,KAAKmB,UI5GnCE,IJ6GkBrB,KAAKkB,SAASL,KAAOb,KAAKmB,UAAUC,MAC7CpB,KAAKkB,SAASL,KAAOb,KAAKmB,UI5GnCC,MJ+GK6B,YAAa,SAAqBhC,EAAM/B,GACtC,OI3GP+B,GJ4GS,II3GT,IJ4GS,II3GT,IJ4GS,II3GT,IJ4GS,II3GT,IJ4GS,II3GT,IJ4GW,MAAOiC,QI3GlBhE,EJ4GS,KI3GT,KJ4GS,II3GT,KJ4GS,II3GT,KJ4GS,II3GT,KJ4GS,II3GT,KJ4GW,MAAOA,GAAQ,GAAK,IAAMA,EAAQgE,OI3G7ChE,EACA,SJ4GW,MI1GX,KJ6GKiE,qBAAsB,WACpB,GAAIxD,KACJA,GAAKK,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","file":"static/js/app.779ceb0c23416ce48a89.js","sourcesContent":["webpackJsonp([2,0],[\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _vue = __webpack_require__(50);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _App = __webpack_require__(47);\n\t\n\tvar _App2 = _interopRequireDefault(_App);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tnew _vue2.default({\n\t  el: 'body',\n\t  components: { App: _App2.default }\n\t});\n\n/***/ },\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */,\n/* 9 */,\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(42)\n\t__vue_script__ = __webpack_require__(14)\n\t__vue_template__ = __webpack_require__(46)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _Samples = __webpack_require__(49);\n\t\n\tvar _Samples2 = _interopRequireDefault(_Samples);\n\t\n\tvar _Playground = __webpack_require__(48);\n\t\n\tvar _Playground2 = _interopRequireDefault(_Playground);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar scrollHandler;\n\t\n\texports.default = {\n\t  name: 'App',\n\t  components: {\n\t    'samples': _Samples2.default,\n\t    'playground': _Playground2.default\n\t  },\n\t\n\t  data: function data() {\n\t    return {\n\t      currentView: 'samples',\n\t      scrollTop: 0\n\t    };\n\t  },\n\t  ready: function ready() {\n\t    var self = this;\n\t    scrollHandler = function scrollHandler(evt) {\n\t      self.scrollTop = evt.target.scrollingElement.scrollTop || 0;\n\t    };\n\t    window.addEventListener('scroll', scrollHandler);\n\t  },\n\t  beforeDestroy: function beforeDestroy() {\n\t    window.removeEventListener('scroll', scrollHandler);\n\t  }\n\t};\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _keys = __webpack_require__(6);\n\t\n\tvar _keys2 = _interopRequireDefault(_keys);\n\t\n\tvar _vueTimepicker = __webpack_require__(10);\n\t\n\tvar _vueTimepicker2 = _interopRequireDefault(_vueTimepicker);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar scrollHandler;\n\t\n\texports.default = {\n\t  name: 'Playground',\n\t  components: [_vueTimepicker2.default],\n\t  data: function data() {\n\t    return {\n\t      tokens: {\n\t        hour: ['HH', 'H', 'hh', 'h', 'kk', 'k'],\n\t        minute: ['mm', 'm'],\n\t        second: ['ss', 's', 'none'],\n\t        apm: ['A', 'a']\n\t      },\n\t\n\t      type: {\n\t        hour: 'hh',\n\t        minute: 'mm',\n\t        second: 'ss',\n\t        apm: 'A'\n\t      },\n\t\n\t      selected: {\n\t        hour: 1,\n\t        minute: 0,\n\t        second: 0,\n\t        apm: 'am'\n\t      },\n\t\n\t      hourRange: {\n\t        min: 1,\n\t        max: 12\n\t      },\n\t\n\t      interval: {\n\t        minute: 1,\n\t        second: 1\n\t      },\n\t\n\t      customInterval: {\n\t        minute: false,\n\t        second: false\n\t      },\n\t\n\t      enableClearBtn: true,\n\t\n\t      playgroundData: {},\n\t\n\t      playgroundFullValue: {},\n\t\n\t      scrollTop: 0\n\t    };\n\t  },\n\t\n\t\n\t  computed: {\n\t    formatString: function formatString() {\n\t      var formatString = this.type.hour + ':' + this.type.minute;\n\t      if (this.type.second !== 'none') {\n\t        formatString += ':' + this.type.second;\n\t      }\n\t      if (this.type.apm) {\n\t        formatString += ' ' + this.type.apm;\n\t      }\n\t      return formatString;\n\t    },\n\t\n\t    needApm: function needApm() {\n\t      return this.type.hour === 'h' || this.type.hour === 'hh';\n\t    },\n\t\n\t    htmlCode: function htmlCode() {\n\t      var start = '<vue-timepicker';\n\t      var end = '>\\n</vue-timepicker>';\n\t\n\t      start += ' format=\"' + this.formatString + '\"';\n\t\n\t      if (this.customInterval.minute) {\n\t        start += '\\n :minute-interval=\"' + this.interval.minute + '\"';\n\t      }\n\t\n\t      if (this.customInterval.second) {\n\t        start += '\\n :second-interval=\"' + this.interval.second + '\"';\n\t      }\n\t\n\t      if (!this.enableClearBtn) {\n\t        start += '\\n hide-clear-button';\n\t      }\n\t\n\t      return start + end;\n\t    },\n\t\n\t    htmlCodeWithVar: function htmlCodeWithVar() {\n\t      var htmlCode = this.htmlCode;\n\t      var end = '>\\n</vue-timepicker>';\n\t      var newEnd = '\\n :time-value.sync=\"yourTimeValue\">\\n</vue-timepicker>';\n\t      htmlCode = htmlCode.replace(end, newEnd);\n\t\n\t      this.refreshHighlight('pghtml');\n\t      this.refreshHighlight('pghtmlvar');\n\t\n\t      return htmlCode;\n\t    },\n\t\n\t    yourTimeValue: function yourTimeValue() {\n\t      var code = 'data: function () {\\n';\n\t      code += '  return {\\n';\n\t      code += '    yourTimeValue: {\\n';\n\t      code += this.listTimeValue();\n\t      code += '\\n    }\\n';\n\t      code += '  }\\n';\n\t      code += '}';\n\t      return code;\n\t    }\n\t  },\n\t\n\t  watch: {\n\t    'selected': {\n\t      deep: true,\n\t      handler: 'updatePlaygroundData'\n\t    },\n\t\n\t    'type': {\n\t      deep: true,\n\t      handler: 'updatePlaygroundData'\n\t    },\n\t\n\t    'needApm': function needApm(isNeeded) {\n\t      if (isNeeded) {\n\t        if (!this.selected.apm) {\n\t          this.type.apm = 'A';\n\t          this.selected.apm = 'am';\n\t        }\n\t      } else {\n\t        this.type.apm = '';\n\t        this.selected.apm = '';\n\t      }\n\t    },\n\t\n\t    'customInterval': {\n\t      deep: true,\n\t      handler: function handler(custom) {\n\t        if (!custom.minute) {\n\t          this.interval.minute = 1;\n\t        }\n\t        if (!custom.second) {\n\t          this.interval.second = 1;\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  methods: {\n\t    updateHourRange: function updateHourRange(hourType) {\n\t      hourType = hourType || this.type.hour;\n\t      var hourRange = {};\n\t      switch (hourType) {\n\t        case 'h':\n\t        case 'hh':\n\t          hourRange.min = 1;\n\t          hourRange.max = 12;\n\t          break;\n\t        case 'H':\n\t        case 'HH':\n\t          hourRange.min = 0;\n\t          hourRange.max = 23;\n\t          break;\n\t        case 'k':\n\t        case 'kk':\n\t          hourRange.min = 1;\n\t          hourRange.max = 24;\n\t          break;\n\t      }\n\t      this.hourRange = hourRange;\n\t      this.handleOutRangeData();\n\t    },\n\t    handleOutRangeData: function handleOutRangeData() {\n\t      if (this.selected.hour > this.hourRange.max) {\n\t        this.selected.hour = this.hourRange.max;\n\t      } else if (this.selected.hour < this.hourRange.min) {\n\t        this.selected.hour = this.hourRange.min;\n\t      }\n\t    },\n\t    formatValue: function formatValue(type, value) {\n\t      switch (type) {\n\t        case 'H':\n\t        case 'h':\n\t        case 'k':\n\t        case 'm':\n\t        case 's':\n\t          return String(value);\n\t        case 'HH':\n\t        case 'hh':\n\t        case 'kk':\n\t        case 'mm':\n\t        case 'ss':\n\t          return value < 10 ? '0' + value : String(value);\n\t        default:\n\t          return '';\n\t      }\n\t    },\n\t    updatePlaygroundData: function updatePlaygroundData() {\n\t      var data = {};\n\t      data[this.type.hour] = this.formatValue(this.type.hour, this.selected.hour);\n\t      data[this.type.minute] = this.formatValue(this.type.minute, this.selected.minute);\n\t\n\t      if (this.type.second !== 'none') {\n\t        data[this.type.second] = this.formatValue(this.type.second, this.selected.second);\n\t      }\n\t\n\t      if (this.type.apm) {\n\t        data[this.type.apm] = this.type.apm === 'A' ? this.selected.apm.toUpperCase() : this.selected.apm;\n\t      }\n\t\n\t      this.playgroundData = data;\n\t      this.refreshHighlight('pgvalue');\n\t      this.refreshHighlight('pgdata');\n\t    },\n\t    listTimeValue: function listTimeValue() {\n\t      var data = this.playgroundData;\n\t      var len = (0, _keys2.default)(data).length;\n\t      var string = '';\n\t      (0, _keys2.default)(data).forEach(function (k, i) {\n\t        string += '      ' + k + ': ' + '\"' + data[k] + '\"';\n\t        if (i < len - 1) {\n\t          string += '\\n';\n\t        }\n\t      });\n\t      return string;\n\t    },\n\t    refreshHighlight: function refreshHighlight(elm) {\n\t      var self = this;\n\t      this.$nextTick(function () {\n\t        window.hljs.highlightBlock(self.$els[elm]);\n\t      });\n\t    },\n\t    asideStyle: function asideStyle() {\n\t      var initPaddingTop = 220;\n\t      var minPaddingTop = 50;\n\t      return { paddingTop: Math.max(initPaddingTop - this.scrollTop, minPaddingTop) + 'px' };\n\t    }\n\t  },\n\t\n\t  events: {\n\t    'vue-timepicker-update': function vueTimepickerUpdate(data) {\n\t      this.playgroundFullValue = data;\n\t      this.refreshHighlight('pgvalue');\n\t    }\n\t  },\n\t\n\t  attached: function attached() {\n\t    var self = this;\n\t    this.$nextTick(function () {\n\t      self.updateHourRange();\n\t      self.updatePlaygroundData();\n\t      window.hljs.initHighlightingOnLoad();\n\t    });\n\t  },\n\t  ready: function ready() {\n\t    var self = this;\n\t    scrollHandler = function scrollHandler(evt) {\n\t      self.scrollTop = evt.target.scrollingElement.scrollTop || 0;\n\t    };\n\t    window.addEventListener('scroll', scrollHandler);\n\t  },\n\t  beforeDestroy: function beforeDestroy() {\n\t    window.removeEventListener('scroll', scrollHandler);\n\t  }\n\t};\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _vueTimepicker = __webpack_require__(10);\n\t\n\tvar _vueTimepicker2 = _interopRequireDefault(_vueTimepicker);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  name: 'Samples',\n\t  components: [_vueTimepicker2.default],\n\t  data: function data() {\n\t    return {\n\t      yourData: {\n\t        hh: '03',\n\t        mm: '10',\n\t        ss: '00',\n\t        a: 'am'\n\t      },\n\t      yourFormat: 'hh:mm:ss a'\n\t    };\n\t  },\n\t\n\t  methods: {\n\t    refreshAllHighlight: function refreshAllHighlight() {\n\t      if (!this.$el) {\n\t        return;\n\t      }\n\t      var codeBlocks = this.$el.querySelectorAll('pre code');\n\t      codeBlocks.forEach(function (block) {\n\t        window.hljs.highlightBlock(block);\n\t      });\n\t    }\n\t  },\n\t  compiled: function compiled() {\n\t    var self = this;\n\t    this.$nextTick(function () {\n\t      self.refreshAllHighlight();\n\t    });\n\t  },\n\t  ready: function ready() {\n\t    this.$nextTick(function () {\n\t      window.hljs.initHighlightingOnLoad();\n\t    });\n\t  }\n\t};\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _keys = __webpack_require__(6);\n\t\n\tvar _keys2 = _interopRequireDefault(_keys);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar CONFIG = {\n\t  HOUR_TOKENS: ['HH', 'H', 'hh', 'h', 'kk', 'k'],\n\t  MINUTE_TOKENS: ['mm', 'm'],\n\t  SECOND_TOKENS: ['ss', 's'],\n\t  APM_TOKENS: ['A', 'a']\n\t};\n\t\n\texports.default = {\n\t  name: 'VueTimepicker',\n\t\n\t  props: {\n\t    timeValue: { type: Object, twoWay: true },\n\t    hideClearButton: { type: Boolean },\n\t    format: { type: String },\n\t    minuteInterval: { type: Number },\n\t    secondInterval: { type: Number }\n\t  },\n\t\n\t  data: function data() {\n\t    return {\n\t      hours: [],\n\t      minutes: [],\n\t      seconds: [],\n\t      apms: [],\n\t      showDropdown: false,\n\t      hourType: 'HH',\n\t      minuteType: 'mm',\n\t      secondType: '',\n\t      apmType: '',\n\t      hour: '',\n\t      minute: '',\n\t      second: '',\n\t      apm: '',\n\t      fullValues: undefined\n\t    };\n\t  },\n\t\n\t\n\t  computed: {\n\t    displayTime: function displayTime() {\n\t      var formatString = String(this.format || 'HH:mm');\n\t      if (this.hour) {\n\t        formatString = formatString.replace(new RegExp(this.hourType, 'g'), this.hour);\n\t      }\n\t      if (this.minute) {\n\t        formatString = formatString.replace(new RegExp(this.minuteType, 'g'), this.minute);\n\t      }\n\t      if (this.second && this.secondType) {\n\t        formatString = formatString.replace(new RegExp(this.secondType, 'g'), this.second);\n\t      }\n\t      if (this.apm && this.apmType) {\n\t        formatString = formatString.replace(new RegExp(this.apmType, 'g'), this.apm);\n\t      }\n\t      return formatString;\n\t    }\n\t  },\n\t\n\t  watch: {\n\t    'format': 'renderFormat',\n\t    'minuteInterval': function minuteInterval(newInteval) {\n\t      undefined.renderList('minute', newInteval);\n\t    },\n\t    'secondInterval': function secondInterval(newInteval) {\n\t      undefined.renderList('second', newInteval);\n\t    },\n\t    'timeValue': 'readValues',\n\t    'displayTime': 'fillValues'\n\t  },\n\t\n\t  methods: {\n\t    formatValue: function formatValue(type, i) {\n\t      switch (type) {\n\t        case 'H':\n\t        case 'm':\n\t        case 's':\n\t          return String(i);\n\t        case 'HH':\n\t        case 'mm':\n\t        case 'ss':\n\t          return i < 10 ? '0' + i : String(i);\n\t        case 'h':\n\t        case 'k':\n\t          return String(i + 1);\n\t        case 'hh':\n\t        case 'kk':\n\t          return i + 1 < 10 ? '0' + (i + 1) : String(i + 1);\n\t        default:\n\t          return '';\n\t      }\n\t    },\n\t    checkAcceptingType: function checkAcceptingType(validValues, formatString, fallbackValue) {\n\t      if (!validValues || !formatString || !formatString.length) {\n\t        return '';\n\t      }\n\t      for (var i = 0; i < validValues.length; i++) {\n\t        if (formatString.indexOf(validValues[i]) > -1) {\n\t          return validValues[i];\n\t        }\n\t      }\n\t      return fallbackValue || '';\n\t    },\n\t    renderFormat: function renderFormat(newFormat) {\n\t      newFormat = newFormat || this.format;\n\t      if (!newFormat || !newFormat.length) {\n\t        newFormat = 'HH:mm';\n\t      }\n\t\n\t      this.hourType = this.checkAcceptingType(CONFIG.HOUR_TOKENS, newFormat, 'HH');\n\t      this.minuteType = this.checkAcceptingType(CONFIG.MINUTE_TOKENS, newFormat, 'mm');\n\t      this.secondType = this.checkAcceptingType(CONFIG.SECOND_TOKENS, newFormat);\n\t      this.apmType = this.checkAcceptingType(CONFIG.APM_TOKENS, newFormat);\n\t\n\t      this.renderHoursList();\n\t      this.renderList('minute');\n\t\n\t      if (this.secondType) {\n\t        this.renderList('second');\n\t      }\n\t\n\t      if (this.apmType) {\n\t        this.renderApmList();\n\t      }\n\t\n\t      var self = this;\n\t      this.$nextTick(function () {\n\t        self.readValues();\n\t      });\n\t    },\n\t    renderHoursList: function renderHoursList() {\n\t      var hoursCount = this.hourType === 'h' || this.hourType === 'hh' ? 12 : 24;\n\t      this.hours = [];\n\t      for (var i = 0; i < hoursCount; i++) {\n\t        this.hours.push(this.formatValue(this.hourType, i));\n\t      }\n\t    },\n\t    renderList: function renderList(listType, interval) {\n\t      if (listType === 'second') {\n\t        interval = interval || this.secondInterval;\n\t      } else if (listType === 'minute') {\n\t        interval = interval || this.minuteInterval;\n\t      } else {\n\t        return;\n\t      }\n\t\n\t      if (interval === 0) {\n\t        interval = 60;\n\t      } else if (interval > 60) {\n\t        window.console.warn('`' + listType + '-interval` should be less than 60. Current value is', interval);\n\t        interval = 1;\n\t      } else if (interval < 1) {\n\t        window.console.warn('`' + listType + '-interval` should be NO less than 1. Current value is', interval);\n\t        interval = 1;\n\t      } else if (!interval) {\n\t        interval = 1;\n\t      }\n\t\n\t      if (listType === 'minute') {\n\t        this.minutes = [];\n\t      } else {\n\t        this.seconds = [];\n\t      }\n\t\n\t      for (var i = 0; i < 60; i += interval) {\n\t        if (listType === 'minute') {\n\t          this.minutes.push(this.formatValue(this.minuteType, i));\n\t        } else {\n\t          this.seconds.push(this.formatValue(this.secondType, i));\n\t        }\n\t      }\n\t    },\n\t    renderApmList: function renderApmList() {\n\t      this.apms = [];\n\t      if (!this.apmType) {\n\t        return;\n\t      }\n\t      this.apms = this.apmType === 'A' ? ['AM', 'PM'] : ['am', 'pm'];\n\t    },\n\t    readValues: function readValues() {\n\t      if (!this.timeValue) {\n\t        return;\n\t      }\n\t\n\t      var values = (0, _keys2.default)(this.timeValue);\n\t\n\t      if (values.indexOf(this.hourType) > -1) {\n\t        this.hour = this.timeValue[this.hourType];\n\t      }\n\t\n\t      if (values.indexOf(this.minuteType) > -1) {\n\t        this.minute = this.timeValue[this.minuteType];\n\t      }\n\t\n\t      if (values.indexOf(this.secondType) > -1) {\n\t        this.second = this.timeValue[this.secondType];\n\t      }\n\t\n\t      if (values.indexOf(this.apmType) > -1) {\n\t        this.apm = this.timeValue[this.apmType];\n\t      }\n\t\n\t      this.fillValues();\n\t    },\n\t    fillValues: function fillValues() {\n\t      var fullValues = {};\n\t\n\t      var baseHour = this.hour;\n\t      var baseHourType = this.hourType;\n\t\n\t      var hourValue = Number(baseHour);\n\t      var baseOnTwelveHours = this.isTwelveHours(baseHourType);\n\t      var apmValue = this.apm ? String(this.apm).toLowerCase() : false;\n\t\n\t      CONFIG.HOUR_TOKENS.forEach(function (token) {\n\t        if (token === baseHourType) {\n\t          fullValues[token] = baseHour;\n\t          return;\n\t        }\n\t\n\t        var value = void 0;\n\t        var apm = void 0;\n\t        switch (token) {\n\t          case 'H':\n\t          case 'HH':\n\t            if (baseOnTwelveHours) {\n\t              if (apmValue === 'pm') {\n\t                value = hourValue < 12 ? hourValue + 12 : hourValue;\n\t              } else {\n\t                value = hourValue % 12;\n\t              }\n\t            } else {\n\t              value = hourValue % 24;\n\t            }\n\t            fullValues[token] = token === 'HH' && value < 10 ? '0' + value : String(value);\n\t            break;\n\t          case 'k':\n\t          case 'kk':\n\t            if (baseOnTwelveHours) {\n\t              if (apmValue === 'pm') {\n\t                value = hourValue < 12 ? hourValue + 12 : hourValue;\n\t              } else {\n\t                value = hourValue === 12 ? 24 : hourValue;\n\t              }\n\t            } else {\n\t              value = hourValue === 0 ? 24 : hourValue;\n\t            }\n\t            fullValues[token] = token === 'kk' && value < 10 ? '0' + value : String(value);\n\t            break;\n\t          case 'h':\n\t          case 'hh':\n\t            if (apmValue) {\n\t              value = hourValue;\n\t              apm = apmValue || 'am';\n\t            } else {\n\t              if (hourValue > 11) {\n\t                apm = 'pm';\n\t                value = hourValue === 12 ? 12 : hourValue % 12;\n\t              } else {\n\t                apm = 'am';\n\t                value = hourValue % 12 === 0 ? 12 : hourValue;\n\t              }\n\t            }\n\t            fullValues[token] = token === 'hh' && value < 10 ? '0' + value : String(value);\n\t            fullValues.a = apm;\n\t            fullValues.A = apm.toUpperCase();\n\t            break;\n\t        }\n\t      });\n\t\n\t      var minuteValue = Number(this.minute);\n\t      fullValues.m = String(minuteValue);\n\t      fullValues.mm = minuteValue < 10 ? '0' + minuteValue : String(minuteValue);\n\t\n\t      var secondValue = Number(this.second) || 0;\n\t      fullValues.s = String(secondValue);\n\t      fullValues.ss = secondValue < 10 ? '0' + secondValue : String(secondValue);\n\t\n\t      this.fullValues = fullValues;\n\t\n\t      this.$dispatch('vue-timepicker-update', fullValues);\n\t    },\n\t    isTwelveHours: function isTwelveHours(token) {\n\t      return token === 'h' || token === 'hh';\n\t    },\n\t    toggleDropdown: function toggleDropdown() {\n\t      this.showDropdown = !this.showDropdown;\n\t    },\n\t    select: function select(type, value) {\n\t      if (type === 'hour') {\n\t        this.hour = value;\n\t      } else if (type === 'minute') {\n\t        this.minute = value;\n\t      } else if (type === 'second') {\n\t        this.second = value;\n\t      } else if (type === 'apm') {\n\t        this.apm = value;\n\t      }\n\t    },\n\t    showClearBtn: function showClearBtn() {\n\t      if (this.hour && this.hour !== '' || this.minute && this.minute !== '') {\n\t        return true;\n\t      } else {\n\t        return false;\n\t      }\n\t    },\n\t    clearTime: function clearTime() {\n\t      this.hour = '';\n\t      this.minute = '';\n\t      this.second = '';\n\t      this.apm = '';\n\t    }\n\t  },\n\t\n\t  ready: function ready() {\n\t    this.renderFormat();\n\t  }\n\t};\n\n/***/ },\n/* 15 */,\n/* 16 */,\n/* 17 */,\n/* 18 */,\n/* 19 */,\n/* 20 */,\n/* 21 */,\n/* 22 */,\n/* 23 */,\n/* 24 */,\n/* 25 */,\n/* 26 */,\n/* 27 */,\n/* 28 */,\n/* 29 */,\n/* 30 */,\n/* 31 */,\n/* 32 */,\n/* 33 */,\n/* 34 */,\n/* 35 */,\n/* 36 */,\n/* 37 */,\n/* 38 */,\n/* 39 */,\n/* 40 */,\n/* 41 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 42 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 43 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <div class=main-wrapper> <header v-cloak> <h1>Vue Timepicker</h1> <p>A dropdown time picker for Vue.js. With flexible time format support</p> </header> <nav class=top-nav :class=\\\"{stick: scrollTop > 150}\\\"> <span class=title>Vue Timepicker</span> <ul> <li><a @click=\\\"currentView = 'samples'\\\" :class=\\\"{active: currentView === 'samples'}\\\">Common Usage</a></li> <li><a @click=\\\"currentView = 'playground'\\\" :class=\\\"{active: currentView === 'playground'}\\\">Playground</a></li> <li><a href=https://github.com/phoenixwong/vue-timepicker target=_blank>Documentation</a></li> </ul> </nav> <main class=content :class=\\\"{'nav-affixed': scrollTop > 150}\\\"> <component :is=currentView transition=fade transition-mode=out-in></component> </main> </div> \";\n\n/***/ },\n/* 44 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <section id=playground> <main> <h2 class=section-title>Timepicker Playground</h2> <div id=configPanel> <div class=config-block id=typesSelection> <h3 class=subtitle><a class=anchor>#</a>Generate <code>format</code> string</h3> <div class=config-row> <label class=row-label>Hour:</label> <label class=options v-for=\\\"htype in tokens.hour\\\" :for=\\\"'hour_type' + $index\\\"> <input v-model=type.hour @click=updateHourRange(htype) :value=htype :id=\\\"'hour_type' + $index\\\" type=radio name=hour_type /> {{htype}} </label> </div> <div class=config-row> <label class=row-label>Minute:</label> <label class=options v-for=\\\"mtype in tokens.minute\\\" :for=\\\"'minute_type' + $index\\\"> <input v-model=type.minute :value=mtype :id=\\\"'minute_type' + $index\\\" type=radio name=minute_type /> {{mtype}} </label> </div> <div class=config-row> <label class=row-label>Second:</label> <label class=options v-for=\\\"stype in tokens.second\\\" :for=\\\"'second_type' + $index\\\"> <input v-model=type.second :value=stype :id=\\\"'second_type' + $index\\\" type=radio name=second_type /> {{stype}} </label> </div> <div class=config-row v-if=needApm> <label class=row-label>AM/PM:</label> <label class=options v-for=\\\"atype in tokens.apm\\\" :for=\\\"'apm_type' + $index\\\" :class=\\\"{disabled: disableApmOption}\\\"> <input v-model=type.apm :value=atype :disabled=disableApmOption :id=\\\"'apm_type' + $index\\\" type=radio name=apm_type /> {{atype}} </label> </div> </div> <div class=config-block> <h3 class=subtitle><a class=anchor>#</a>Customized Interval</h3> <div class=\\\"config-row group\\\"> <label> <input v-model=customInterval.minute type=checkbox /> Minute Interval </label> <label v-if=customInterval.minute class=range-wrapper> <input v-model=interval.minute type=range min=0 max=60 step=1 /> <span v-text=interval.minute></span> </label> </div> <div class=\\\"config-row group\\\"> <label> <input v-model=customInterval.second type=checkbox /> Second Interval </label> <label v-if=customInterval.second class=range-wrapper> <input v-model=interval.second type=range min=0 max=60 step=1 /> <span v-text=interval.second></span> </label> </div> </div> <div class=config-block> <h3 class=subtitle><a class=anchor>#</a>Clear Button</h3> <div class=\\\"config-row group\\\"> <label for=enable_btn_true> <input v-model=enableClearBtn type=radio id=enable_btn_true name=enable_btn :value=true /> Enable </label> <label for=enable_btn_false> <input v-model=enableClearBtn type=radio id=enable_btn_false name=enable_btn :value=false /> Disable </label> </div> </div> <div class=codes> <pre data-title=HTML><code v-el:pghtml class=html v-text=htmlCode></code></pre> </div> <div class=config-block id=valuesSelection> <h3 class=subtitle><a class=anchor>#</a>Bind <code>time-value</code> data</h3> <div class=config-row> <label class=row-label>Hour:</label> <label class=options> <input v-model=selected.hour type=range :min=hourRange.min :max=hourRange.max step=1 /> <span v-text=selected.hour></span> </label> </div> <div class=config-row> <label class=row-label>Minute:</label> <label class=options> <input v-model=selected.minute type=range min=0 max=59 :step=interval.minute /> <span v-text=selected.minute></span> </label> </div> <div v-if=\\\"secondType !== 'none'\\\" class=config-row> <label class=row-label>Second:</label> <label class=options> <input v-model=selected.second type=range min=0 max=59 :step=interval.second /> <span v-text=selected.second></span> </label> </div> <div v-if=needApm :class=\\\"{capitailized: type.apm === 'A'}\\\" class=config-row> <label class=row-label>AM/PM:</label> <label class=options for=selected_apm_am> <input v-model=selected.apm type=radio id=selected_apm_am name=selected_apm value=am /> am </label> <label class=options for=selected_apm_pm> <input v-model=selected.apm type=radio id=selected_apm_pm name=selected_apm value=pm /> pm </label> </div> </div> <div class=codes> <pre data-title=JS><code v-el:pgdata class=javascript v-text=yourTimeValue></code></pre> </div> <div class=codes> <pre data-title=HTML><code v-el:pghtmlvar class=html v-text=htmlCodeWithVar></code></pre> </div> </div> </main> <aside class=previews :style=asideStyle()> <div id=playgroundPreview class=preview> <b>Format string: </b> <span v-text=formatString></span> <p> <vue-timepicker :format=formatString :time-value.sync=playgroundData :minute-interval=interval.minute :second-interval=interval.second :hide-clear-button=!enableClearBtn></vue-timepicker> </p> </div> <div id=dispatchedValue class=codes> <pre data-title=vue-timepicker-update><code v-el:pgvalue class=json v-text=\\\"playgroundFullValue | json 2\\\"></code></pre> </div> </aside> </section> \";\n\n/***/ },\n/* 45 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <section id=mostlyUsedSamples> <h2 class=section-title>Common Usage</h2> <div class=block> <h3 class=title><a class=anchor id=default>#</a>Default</h3> <div class=description> <p>Default to 24-hour format <code>HH:mm</code></p> </div> <div class=codes> <pre data-title=HTML><code v-el:ugdefault class=html>&lt;vue-timepicker&gt;&lt;/vue-timepicker&gt;</code></pre> </div> <div class=preview> <vue-timepicker></vue-timepicker> </div> </div> <div class=block> <h3 class=title><a class=anchor id=format12hours>#</a>12 Hours</h3> <div class=description> <p>By properly define the <code>format</code> string, you can set timepicker in form of 12 hours</p> </div> <div> <div class=codes> <pre data-title=HTML>\\n<code class=html>&lt;!-- 12-hour sample 1 --&gt;\\n&lt;vue-timepicker format=\\\"hh:mm A\\\"&gt;&lt;/vue-timepicker&gt;\\n\\n&lt;!-- 12-hour sample 2 --&gt;\\n&lt;vue-timepicker format=\\\"h:m a\\\"&gt;&lt;/vue-timepicker&gt;\\n</code>\\n</pre> </div> <div class=preview> <b>12-hour sample 1</b> <p> <vue-timepicker format=\\\"hh:mm A\\\"></vue-timepicker> </p> <b>12-hour sample 2</b> <p> <vue-timepicker format=\\\"h:m a\\\"></vue-timepicker> </p> </div> </div> </div> <div class=block> <h3 class=title><a class=anchor id=seconds>#</a>Seconds Picker</h3> <div class=description> <p>You can trigger the seconds picker by adding <code>ss</code> or <code>s</code> in your format string.</p> </div> <div class=codes> <pre data-title=HTML><code class=html>&lt;vue-timepicker format=\\\"HH:mm:ss\\\"&gt;&lt;/vue-timepicker&gt;</code></pre> </div> <div class=preview> <vue-timepicker format=HH:mm:ss></vue-timepicker> </div> </div> <div class=block> <h3 class=title><a class=anchor id=interval>#</a>Customized Interval</h3> <div class=description> <p>Timepicker also allows you to display minutes or seconds picker with certain interval, like a 10-minute interval <code>0, 10, 20, ... 50, 60</code> for example</p> </div> <div class=codes> <pre data-title=HTML>\\n<code class=html>&lt;!-- 10-minute interval --&gt;\\n&lt;vue-timepicker :minute-interval=\\\"10\\\"&gt;&lt;/vue-timepicker&gt;\\n\\n&lt;!-- 15-second interval --&gt;\\n&lt;vue-timepicker format=\\\"HH:mm:ss\\\" :second-interval=\\\"15\\\"&gt;&lt;/vue-timepicker&gt;\\n\\n&lt;!-- 5-minute interval plus 10-second interval --&gt;\\n&lt;vue-timepicker format=\\\"hh:mm:ss\\\" :minute-interval=\\\"5\\\" :second-interval=\\\"10\\\"&gt;&lt;/vue-timepicker&gt;\\n</code>\\n</pre> </div> <div class=preview> <b>10-minute interval</b> <p> <vue-timepicker :minute-interval=10></vue-timepicker> </p> <b>15-second interval</b> <p> <vue-timepicker format=HH:mm:ss :second-interval=15></vue-timepicker> </p> <b>5-minute interval plus 10-second interval</b> <p> <vue-timepicker format=hh:mm:ss :minute-interval=5 :second-interval=10></vue-timepicker> </p> </div> </div> <div class=block> <h3 class=title><a class=anchor id=sync>#</a>Sync Data</h3> <div class=description> <p>Manipulate your timepicker's data as usual</p> </div> <div class=codes> <pre data-title=JS><code class=javascript>data: {\\n  yourFormat: 'hh:mm:ss a',\\n  yourData: {\\n    hh: '03',\\n    mm: '10',\\n    ss: '00',\\n    a: 'am'\\n  }\\n}</code></pre> </div> <div class=codes> <pre data-title=HTML><code class=html>&lt;vue-timepicker :format=\\\"yourFormat\\\" :time-value.sync=\\\"yourData\\\"&gt;&lt;/vue-timepicker&gt;</code></pre> </div> <div> <div class=preview> <vue-timepicker :format=yourFormat :time-value.sync=yourData></vue-timepicker> </div> </div> </div> <div class=block> <h3 class=title><a class=anchor id=hideClearButton>#</a>Hide Clear Button</h3> <div class=description> <p>If you don't want to expose the clear button in the UI, <code>hide-clear-button</code> property will do the trick.</p> </div> <div class=codes> <pre data-title=HTML><code class=html>&lt;vue-timepicker hide-clear-button&gt;&lt;/vue-timepicker&gt;</code></pre> </div> <div class=preview> <vue-timepicker hide-clear-button></vue-timepicker> </div> </div> <div class=block> <h3 class=title><a class=anchor id=more>#</a>More complex usage</h3> <div class=description> <p>Didn't find what you need? Please check the <a>Playground</a> or <a href=https://github.com/phoenixwong/vue-timepicker target=_blank>Documentation</a> for more inspiration.</p> </div> </div> </section> \";\n\n/***/ },\n/* 46 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <span class=time-picker> <input class=display-time v-model=displayTime @click=toggleDropdown type=text readonly=readonly /> <span class=clear-btn v-if=!hideClearButton v-show=\\\"!showDropdown && showClearBtn()\\\" @click=clearTime>&times;</span> <div class=time-picker-overlay v-if=showDropdown @click=toggleDropdown></div> <div class=dropdown v-show=showDropdown> <div class=select-list> <ul class=hours> <li class=hint v-text=hourType></li> <li v-for=\\\"hr in hours\\\" v-text=hr :class=\\\"{active: hour === hr}\\\" @click=\\\"select('hour', hr)\\\"></li> </ul> <ul class=minutes> <li class=hint v-text=minuteType></li> <li v-for=\\\"m in minutes\\\" v-text=m :class=\\\"{active: minute === m}\\\" @click=\\\"select('minute', m)\\\"></li> </ul> <ul class=seconds v-if=secondType> <li class=hint v-text=secondType></li> <li v-for=\\\"s in seconds\\\" v-text=s :class=\\\"{active: second === s}\\\" @click=\\\"select('second', s)\\\"></li> </ul> <ul class=apms v-if=apmType> <li class=hint v-text=apmType></li> <li v-for=\\\"a in apms\\\" v-text=a :class=\\\"{active: apm === a}\\\" @click=\\\"select('apm', a)\\\"></li> </ul> </div> </div> </span> \";\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(41)\n\t__vue_script__ = __webpack_require__(11)\n\t__vue_template__ = __webpack_require__(43)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(12)\n\t__vue_template__ = __webpack_require__(44)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__vue_script__ = __webpack_require__(13)\n\t__vue_template__ = __webpack_require__(45)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ }\n]);\n\n\n/** WEBPACK FOOTER **\n ** static/js/app.779ceb0c23416ce48a89.js\n **/","import Vue from 'vue'\nimport App from './App.vue'\n\n/* eslint-disable no-new */\nnew Vue({\n  el: 'body',\n  components: { App }\n})\n\n\n\n/** WEBPACK FOOTER **\n ** ./demo/main.js\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../node_modules/vue-loader/lib/style-rewriter.js!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./vue-timepicker.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../node_modules/vue-loader/lib/selector.js?type=script&index=0!./vue-timepicker.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../node_modules/vue-loader/lib/selector.js?type=template&index=0!./vue-timepicker.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/vue-timepicker.vue\n ** module id = 10\n ** module chunks = 2\n **/","<script>\nimport Samples from 'components/Samples.vue'\nimport Playground from 'components/Playground.vue'\n\nvar scrollHandler\n\nexport default {\n  name: 'App',\n  components: {\n    'samples': Samples,\n    'playground': Playground\n  },\n\n  data () {\n    return {\n      currentView: 'samples',\n      scrollTop: 0\n    }\n  },\n\n  ready () {\n    const self = this\n    scrollHandler = (evt) => {\n      self.scrollTop = evt.target.scrollingElement.scrollTop || 0\n    }\n    window.addEventListener('scroll', scrollHandler)\n  },\n\n  beforeDestroy () {\n    window.removeEventListener('scroll', scrollHandler)\n  }\n}\n</script>\n\n<template>\n  <div class=\"main-wrapper\">\n    <header v-cloak>\n      <h1>Vue Timepicker</h1>\n      <p>A dropdown time picker for Vue.js. With flexible time format support</p>\n    </header>\n    <nav class=\"top-nav\" :class=\"{stick: scrollTop > 150}\">\n      <span class=\"title\">Vue Timepicker</span>\n      <ul>\n        <li><a @click=\"currentView = 'samples'\" :class=\"{active: currentView === 'samples'}\">Common Usage</a></li>\n        <li><a @click=\"currentView = 'playground'\" :class=\"{active: currentView === 'playground'}\">Playground</a></li>\n        <li><a href=\"https://github.com/phoenixwong/vue-timepicker\" target=\"_blank\">Documentation</a></li>\n      </ul>\n    </nav>\n    <main class=\"content\" :class=\"{'nav-affixed': scrollTop > 150}\">\n      <component :is=\"currentView\" transition=\"fade\" transition-mode=\"out-in\"></component>\n    </main>\n  </div>\n</template>\n\n<style lang=\"sass\">\n@import \"./assets/demo.scss\";\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** App.vue?096143aa\n **/","<script>\nimport VueTimepicker from 'src/vue-timepicker.vue'\n\nvar scrollHandler\n\nexport default {\n  name: 'Playground',\n  components: [VueTimepicker],\n  data () {\n    return {\n      tokens: {\n        hour: ['HH', 'H', 'hh', 'h', 'kk', 'k'],\n        minute: ['mm', 'm'],\n        second: ['ss', 's', 'none'],\n        apm: ['A', 'a']\n      },\n\n      type: {\n        hour: 'hh',\n        minute: 'mm',\n        second: 'ss',\n        apm: 'A'\n      },\n\n      selected: {\n        hour: 1,\n        minute: 0,\n        second: 0,\n        apm: 'am'\n      },\n\n      hourRange: {\n        min: 1,\n        max: 12\n      },\n\n      interval: {\n        minute: 1,\n        second: 1\n      },\n\n      customInterval: {\n        minute: false,\n        second: false\n      },\n\n      enableClearBtn: true,\n\n      playgroundData: {},\n\n      playgroundFullValue: {},\n\n      scrollTop: 0\n    }\n  },\n\n  computed: {\n    formatString: function () {\n      let formatString = this.type.hour + ':' + this.type.minute\n      if (this.type.second !== 'none') {\n        formatString += (':' + this.type.second)\n      }\n      if (this.type.apm) {\n        formatString += (' ' + this.type.apm)\n      }\n      return formatString\n    },\n\n    needApm: function () {\n      return this.type.hour === 'h' || this.type.hour === 'hh'\n    },\n\n    htmlCode: function () {\n      let start = '<vue-timepicker'\n      let end = '>\\n</vue-timepicker>'\n\n      start += (' format=\"' + this.formatString + '\"')\n\n      if (this.customInterval.minute) {\n        start += ('\\n :minute-interval=\"' + this.interval.minute + '\"')\n      }\n\n      if (this.customInterval.second) {\n        start += ('\\n :second-interval=\"' + this.interval.second + '\"')\n      }\n\n      if (!this.enableClearBtn) {\n        start += ('\\n hide-clear-button')\n      }\n\n      return start + end\n    },\n\n    htmlCodeWithVar: function () {\n      let htmlCode = this.htmlCode\n      const end = '>\\n</vue-timepicker>'\n      const newEnd = '\\n :time-value.sync=\"yourTimeValue\">\\n</vue-timepicker>'\n      htmlCode = htmlCode.replace(end, newEnd)\n\n      this.refreshHighlight('pghtml')\n      this.refreshHighlight('pghtmlvar')\n\n      return htmlCode\n    },\n\n    yourTimeValue: function () {\n      let code = 'data: function () {\\n'\n      code += '  return {\\n'\n      code += '    yourTimeValue: {\\n'\n      code += this.listTimeValue()\n      code += '\\n    }\\n'\n      code += '  }\\n'\n      code += '}'\n      return code\n    }\n  },\n\n  watch: {\n    'selected': {\n      deep: true,\n      handler: 'updatePlaygroundData'\n    },\n\n    'type': {\n      deep: true,\n      handler: 'updatePlaygroundData'\n    },\n\n    'needApm': function (isNeeded) {\n      if (isNeeded) {\n        if (!this.selected.apm) {\n          this.type.apm = 'A'\n          this.selected.apm = 'am'\n        }\n      } else {\n        this.type.apm = ''\n        this.selected.apm = ''\n      }\n    },\n\n    'customInterval': {\n      deep: true,\n      handler: function (custom) {\n        if (!custom.minute) {\n          this.interval.minute = 1\n        }\n        if (!custom.second) {\n          this.interval.second = 1\n        }\n      }\n    }\n  },\n\n  methods: {\n    updateHourRange (hourType) {\n      hourType = hourType || this.type.hour\n      let hourRange = {}\n      switch (hourType) {\n        case 'h':\n        case 'hh':\n          hourRange.min = 1\n          hourRange.max = 12\n          break\n        case 'H':\n        case 'HH':\n          hourRange.min = 0\n          hourRange.max = 23\n          break\n        case 'k':\n        case 'kk':\n          hourRange.min = 1\n          hourRange.max = 24\n          break\n      }\n      this.hourRange = hourRange\n      this.handleOutRangeData()\n    },\n\n    handleOutRangeData () {\n      if (this.selected.hour > this.hourRange.max) {\n        this.selected.hour = this.hourRange.max\n      } else if (this.selected.hour < this.hourRange.min) {\n        this.selected.hour = this.hourRange.min\n      }\n    },\n\n    formatValue (type, value) {\n      switch (type) {\n        case 'H':\n        case 'h':\n        case 'k':\n        case 'm':\n        case 's':\n          return String(value)\n        case 'HH':\n        case 'hh':\n        case 'kk':\n        case 'mm':\n        case 'ss':\n          return value < 10 ? `0${value}` : String(value)\n        default:\n          return ''\n      }\n    },\n\n    updatePlaygroundData () {\n      let data = {}\n      data[this.type.hour] = this.formatValue(this.type.hour, this.selected.hour)\n      data[this.type.minute] = this.formatValue(this.type.minute, this.selected.minute)\n\n      if (this.type.second !== 'none') {\n        data[this.type.second] = this.formatValue(this.type.second, this.selected.second)\n      }\n\n      if (this.type.apm) {\n        data[this.type.apm] = this.type.apm === 'A' ? (this.selected.apm).toUpperCase() : this.selected.apm\n      }\n\n      this.playgroundData = data\n      this.refreshHighlight('pgvalue')\n      this.refreshHighlight('pgdata')\n    },\n\n    listTimeValue () {\n      const data = this.playgroundData\n      const len = Object.keys(data).length\n      let string = ''\n      Object.keys(data).forEach((k, i) => {\n        string += ('      ' + k + ': ' + '\"' + data[k] + '\"')\n        if (i < len - 1) {\n          string += '\\n'\n        }\n      })\n      return string\n    },\n\n    refreshHighlight (elm) {\n      const self = this\n      this.$nextTick(() => {\n        window.hljs.highlightBlock(self.$els[elm])\n      })\n    },\n\n    asideStyle () {\n      const initPaddingTop = 220\n      const minPaddingTop = 50\n      return {paddingTop: (Math.max(initPaddingTop - this.scrollTop, minPaddingTop)) + 'px'}\n    }\n  },\n\n  events: {\n    'vue-timepicker-update': function (data) {\n      this.playgroundFullValue = data\n      this.refreshHighlight('pgvalue')\n    }\n  },\n\n  attached () {\n    const self = this\n    this.$nextTick(() => {\n      self.updateHourRange()\n      self.updatePlaygroundData()\n      window.hljs.initHighlightingOnLoad()\n    })\n  },\n\n  ready () {\n    const self = this\n    scrollHandler = (evt) => {\n      self.scrollTop = evt.target.scrollingElement.scrollTop || 0\n    }\n    window.addEventListener('scroll', scrollHandler)\n  },\n\n  beforeDestroy () {\n    window.removeEventListener('scroll', scrollHandler)\n  }\n}\n</script>\n\n<template>\n<section id=\"playground\">\n  <main>\n    <h2 class=\"section-title\">Timepicker Playground</h2>\n    <div id=\"configPanel\">\n      <div class=\"config-block\" id=\"typesSelection\">\n        <h3 class=\"subtitle\"><a class=\"anchor\">#</a>Generate <code>format</code> string</h3>\n        <div class=\"config-row\">\n          <label class=\"row-label\">Hour:</label>\n          <label class=\"options\" v-for=\"htype in tokens.hour\" :for=\"'hour_type' + $index\">\n            <input v-model=\"type.hour\" @click=\"updateHourRange(htype)\" :value=\"htype\" :id=\"'hour_type' + $index\" type=\"radio\" name=\"hour_type\" /> {{htype}}\n          </label>\n        </div>\n        <div class=\"config-row\">\n          <label class=\"row-label\">Minute:</label>\n          <label class=\"options\" v-for=\"mtype in tokens.minute\" :for=\"'minute_type' + $index\">\n            <input v-model=\"type.minute\" :value=\"mtype\" :id=\"'minute_type' + $index\" type=\"radio\" name=\"minute_type\" /> {{mtype}}\n          </label>\n        </div>\n        <div class=\"config-row\">\n          <label class=\"row-label\">Second:</label>\n          <label class=\"options\" v-for=\"stype in tokens.second\" :for=\"'second_type' + $index\">\n            <input v-model=\"type.second\" :value=\"stype\" :id=\"'second_type' + $index\" type=\"radio\" name=\"second_type\" /> {{stype}}\n          </label>\n        </div>\n        <div class=\"config-row\" v-if=\"needApm\">\n          <label class=\"row-label\">AM/PM:</label>\n          <label class=\"options\" v-for=\"atype in tokens.apm\" :for=\"'apm_type' + $index\" :class=\"{disabled: disableApmOption}\">\n            <input v-model=\"type.apm\" :value=\"atype\" :disabled=\"disableApmOption\" :id=\"'apm_type' + $index\" type=\"radio\" name=\"apm_type\" /> {{atype}}\n          </label>\n        </div>\n      </div>\n\n      <div class=\"config-block\">\n        <h3 class=\"subtitle\"><a class=\"anchor\">#</a>Customized Interval</h3>\n        <!-- <label class=\"group-label\">Customized Interval:</label> -->\n        <div class=\"config-row group\">\n          <label>\n            <input v-model=\"customInterval.minute\" type=\"checkbox\" /> Minute Interval\n          </label>\n          <label v-if=\"customInterval.minute\" class=\"range-wrapper\">\n            <input v-model=\"interval.minute\" type=\"range\" min=\"0\" max=\"60\" step=\"1\" />\n            <span v-text=\"interval.minute\"></span>\n          </label>\n        </div>\n        <div class=\"config-row group\">\n          <label>\n            <input v-model=\"customInterval.second\" type=\"checkbox\" /> Second Interval\n          </label>\n          <label v-if=\"customInterval.second\" class=\"range-wrapper\" >\n            <input v-model=\"interval.second\" type=\"range\" min=\"0\" max=\"60\" step=\"1\" />\n            <span v-text=\"interval.second\"></span>\n          </label>\n        </div>\n      </div>\n\n      <div class=\"config-block\">\n        <h3 class=\"subtitle\"><a class=\"anchor\">#</a>Clear Button</h3>\n        <!-- <label class=\"group-label\">Clear Button</label> -->\n        <div class=\"config-row group\">\n          <label for=\"enable_btn_true\">\n            <input v-model=\"enableClearBtn\" type=\"radio\" id=\"enable_btn_true\" name=\"enable_btn\" :value=\"true\" /> Enable\n          </label>\n          <label for=\"enable_btn_false\">\n            <input v-model=\"enableClearBtn\" type=\"radio\" id=\"enable_btn_false\" name=\"enable_btn\" :value=\"false\" /> Disable\n          </label>\n        </div>\n      </div>\n\n      <div class=\"codes\">\n        <pre data-title=\"HTML\"><code v-el:pghtml class=\"html\" v-text=\"htmlCode\"></code></pre>\n      </div>\n\n      <div class=\"config-block\" id=\"valuesSelection\">\n        <h3 class=\"subtitle\"><a class=\"anchor\">#</a>Bind <code>time-value</code> data</h3>\n        <div class=\"config-row\">\n          <label class=\"row-label\">Hour:</label>\n          <label class=\"options\">\n            <input v-model=\"selected.hour\" type=\"range\" :min=\"hourRange.min\" :max=\"hourRange.max\" step=\"1\" />\n            <span v-text=\"selected.hour\"></span>\n          </label>\n        </div>\n        <div class=\"config-row\">\n          <label class=\"row-label\">Minute:</label>\n          <label class=\"options\">\n            <input v-model=\"selected.minute\" type=\"range\" min=\"0\" max=\"59\" :step=\"interval.minute\" />\n            <span v-text=\"selected.minute\"></span>\n          </label>\n        </div>\n        <div v-if=\"secondType !== 'none'\" class=\"config-row\">\n          <label class=\"row-label\">Second:</label>\n          <label class=\"options\">\n            <input v-model=\"selected.second\" type=\"range\" min=\"0\" max=\"59\" :step=\"interval.second\" />\n            <span v-text=\"selected.second\"></span>\n          </label>\n        </div>\n        <div v-if=\"needApm\" :class=\"{capitailized: type.apm === 'A'}\" class=\"config-row\">\n          <label class=\"row-label\">AM/PM:</label>\n          <label class=\"options\" for=\"selected_apm_am\">\n            <input v-model=\"selected.apm\" type=\"radio\" id=\"selected_apm_am\" name=\"selected_apm\" value=\"am\" /> am\n          </label>\n          <label class=\"options\" for=\"selected_apm_pm\">\n            <input v-model=\"selected.apm\" type=\"radio\" id=\"selected_apm_pm\" name=\"selected_apm\" value=\"pm\" /> pm\n          </label>\n        </div>\n      </div>\n\n      <div class=\"codes\">\n        <pre data-title=\"JS\"><code v-el:pgdata class=\"javascript\" v-text=\"yourTimeValue\"></code></pre>\n      </div>\n\n      <div class=\"codes\">\n        <pre data-title=\"HTML\"><code v-el:pghtmlvar class=\"html\" v-text=\"htmlCodeWithVar\"></code></pre>\n      </div>\n\n    </div>\n\n  </main>\n\n  <aside class=\"previews\" :style=\"asideStyle()\">\n    <div id=\"playgroundPreview\" class=\"preview\">\n      <b>Format string: </b>\n      <span v-text=\"formatString\"></span>\n      <p>\n        <vue-timepicker :format=\"formatString\" :time-value.sync=\"playgroundData\" :minute-interval=\"interval.minute\" :second-interval=\"interval.second\" :hide-clear-button=\"!enableClearBtn\"></vue-timepicker>\n      </p>\n    </div>\n\n    <div id=\"dispatchedValue\" class=\"codes\">\n      <pre data-title=\"vue-timepicker-update\"><code v-el:pgvalue class=\"json\" v-text=\"playgroundFullValue | json 2\"></code></pre>\n    </div>\n  </aside>\n\n</section>\n</template>\n\n\n\n/** WEBPACK FOOTER **\n ** Playground.vue?49fa831b\n **/","<script>\nimport VueTimepicker from 'src/vue-timepicker.vue'\n\nexport default {\n  name: 'Samples',\n  components: [VueTimepicker],\n  data () {\n    return {\n      yourData: {\n        hh: '03',\n        mm: '10',\n        ss: '00',\n        a: 'am'\n      },\n      yourFormat: 'hh:mm:ss a'\n    }\n  },\n  methods: {\n    refreshAllHighlight () {\n      if (!this.$el) { return }\n      const codeBlocks = this.$el.querySelectorAll('pre code')\n      codeBlocks.forEach((block) => {\n        window.hljs.highlightBlock(block)\n      })\n    }\n  },\n  compiled () {\n    const self = this\n    this.$nextTick(() => {\n      self.refreshAllHighlight()\n    })\n  },\n  ready () {\n    this.$nextTick(() => {\n      window.hljs.initHighlightingOnLoad()\n    })\n  }\n}\n</script>\n\n<template>\n  <section id=\"mostlyUsedSamples\">\n    <h2 class=\"section-title\">Common Usage</h2>\n\n    <div class=\"block\">\n      <h3 class=\"title\"><a class=\"anchor\" id=\"default\">#</a>Default</h3>\n      <div class=\"description\">\n        <p>Default to 24-hour format <code>HH:mm</code></p>\n      </div>\n      <div class=\"codes\">\n        <pre data-title=\"HTML\"><code v-el:ugdefault class=\"html\">&lt;vue-timepicker&gt;&lt;/vue-timepicker&gt;</code></pre>\n      </div>\n      <div class=\"preview\">\n        <vue-timepicker></vue-timepicker>\n      </div>\n    </div>\n\n    <div class=\"block\">\n      <h3 class=\"title\"><a class=\"anchor\" id=\"format12hours\">#</a>12 Hours</h3>\n      <div class=\"description\">\n        <p>By properly define the <code>format</code> string, you can set timepicker in form of 12 hours</p>\n      </div>\n      <div>\n        <div class=\"codes\">\n<pre data-title=\"HTML\">\n<code class=\"html\">&lt;!-- 12-hour sample 1 --&gt;\n&lt;vue-timepicker format=\"hh:mm A\"&gt;&lt;/vue-timepicker&gt;\n\n&lt;!-- 12-hour sample 2 --&gt;\n&lt;vue-timepicker format=\"h:m a\"&gt;&lt;/vue-timepicker&gt;\n</code>\n</pre>\n        </div>\n        <div class=\"preview\">\n          <b>12-hour sample 1</b>\n          <p>\n            <vue-timepicker format=\"hh:mm A\"></vue-timepicker>\n          </p>\n          <b>12-hour sample 2</b>\n          <p>\n            <vue-timepicker format=\"h:m a\"></vue-timepicker>\n          </p>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"block\">\n      <h3 class=\"title\"><a class=\"anchor\" id=\"seconds\">#</a>Seconds Picker</h3>\n      <div class=\"description\">\n        <p>You can trigger the seconds picker by adding <code>ss</code> or <code>s</code> in your format string.</p>\n      </div>\n      <div class=\"codes\">\n        <pre data-title=\"HTML\"><code class=\"html\">&lt;vue-timepicker format=\"HH:mm:ss\"&gt;&lt;/vue-timepicker&gt;</code></pre>\n      </div>\n      <div class=\"preview\">\n        <vue-timepicker format=\"HH:mm:ss\"></vue-timepicker>\n      </div>\n    </div>\n\n    <div class=\"block\">\n      <h3 class=\"title\"><a class=\"anchor\" id=\"interval\">#</a>Customized Interval</h3>\n      <div class=\"description\">\n        <p>Timepicker also allows you to display minutes or seconds picker with certain interval, like a 10-minute interval <code>0, 10, 20, ... 50, 60</code> for example</p>\n      </div>\n      <div class=\"codes\">\n<pre data-title=\"HTML\">\n<code class=\"html\">&lt;!-- 10-minute interval --&gt;\n&lt;vue-timepicker :minute-interval=\"10\"&gt;&lt;/vue-timepicker&gt;\n\n&lt;!-- 15-second interval --&gt;\n&lt;vue-timepicker format=\"HH:mm:ss\" :second-interval=\"15\"&gt;&lt;/vue-timepicker&gt;\n\n&lt;!-- 5-minute interval plus 10-second interval --&gt;\n&lt;vue-timepicker format=\"hh:mm:ss\" :minute-interval=\"5\" :second-interval=\"10\"&gt;&lt;/vue-timepicker&gt;\n</code>\n</pre>\n      </div>\n      <div class=\"preview\">\n        <b>10-minute interval</b>\n        <p>\n          <vue-timepicker :minute-interval=\"10\"></vue-timepicker>\n        </p>\n        <b>15-second interval</b>\n        <p>\n          <vue-timepicker format=\"HH:mm:ss\" :second-interval=\"15\"></vue-timepicker>\n        </p>\n        <b>5-minute interval plus 10-second interval</b>\n        <p>\n          <vue-timepicker format=\"hh:mm:ss\" :minute-interval=\"5\" :second-interval=\"10\"></vue-timepicker>\n        </p>\n      </div>\n    </div>\n\n    <div class=\"block\">\n      <h3 class=\"title\"><a class=\"anchor\" id=\"sync\">#</a>Sync Data</h3>\n      <div class=\"description\">\n        <p>Manipulate your timepicker's data as usual</p>\n      </div>\n      <div class=\"codes\">\n<pre data-title=\"JS\"><code class=\"javascript\">data: {\n  yourFormat: 'hh:mm:ss a',\n  yourData: {\n    hh: '03',\n    mm: '10',\n    ss: '00',\n    a: 'am'\n  }\n}</code></pre>\n      </div>\n      <div class=\"codes\">\n        <pre data-title=\"HTML\"><code class=\"html\">&lt;vue-timepicker :format=\"yourFormat\" :time-value.sync=\"yourData\"&gt;&lt;/vue-timepicker&gt;</code></pre>\n      </div>\n      <div>\n        <div class=\"preview\">\n          <vue-timepicker :format=\"yourFormat\" :time-value.sync=\"yourData\"></vue-timepicker>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"block\">\n      <h3 class=\"title\"><a class=\"anchor\" id=\"hideClearButton\">#</a>Hide Clear Button</h3>\n      <div class=\"description\">\n        <p>If you don't want to expose the clear button in the UI, <code>hide-clear-button</code> property will do the trick.</p>\n      </div>\n      <div class=\"codes\">\n        <pre data-title=\"HTML\"><code class=\"html\">&lt;vue-timepicker hide-clear-button&gt;&lt;/vue-timepicker&gt;</code></pre>\n      </div>\n      <div class=\"preview\">\n        <vue-timepicker hide-clear-button></vue-timepicker>\n      </div>\n    </div>\n\n    <div class=\"block\">\n      <h3 class=\"title\"><a class=\"anchor\" id=\"more\">#</a>More complex usage</h3>\n      <div class=\"description\">\n        <p>Didn't find what you need? Please check the <a>Playground</a> or <a href=\"https://github.com/phoenixwong/vue-timepicker\" target=\"_blank\">Documentation</a> for more inspiration.</p>\n      </div>\n    </div>\n\n  </section>\n</template>\n\n\n\n/** WEBPACK FOOTER **\n ** Samples.vue?2cbbac4f\n **/","<script type=\"text/ecmascript-6\">\nconst CONFIG = {\n  HOUR_TOKENS: ['HH', 'H', 'hh', 'h', 'kk', 'k'],\n  MINUTE_TOKENS: ['mm', 'm'],\n  SECOND_TOKENS: ['ss', 's'],\n  APM_TOKENS: ['A', 'a']\n}\n\nexport default {\n  name: 'VueTimepicker',\n\n  props: {\n    timeValue: {type: Object, twoWay: true},\n    hideClearButton: {type: Boolean},\n    format: {type: String},\n    minuteInterval: {type: Number},\n    secondInterval: {type: Number}\n  },\n\n  data () {\n    return {\n      hours: [],\n      minutes: [],\n      seconds: [],\n      apms: [],\n      showDropdown: false,\n      hourType: 'HH',\n      minuteType: 'mm',\n      secondType: '',\n      apmType: '',\n      hour: '',\n      minute: '',\n      second: '',\n      apm: '',\n      fullValues: undefined\n    }\n  },\n\n  computed: {\n    displayTime () {\n      let formatString = String((this.format || 'HH:mm'))\n      if (this.hour) {\n        formatString = formatString.replace(new RegExp(this.hourType, 'g'), this.hour)\n      }\n      if (this.minute) {\n        formatString = formatString.replace(new RegExp(this.minuteType, 'g'), this.minute)\n      }\n      if (this.second && this.secondType) {\n        formatString = formatString.replace(new RegExp(this.secondType, 'g'), this.second)\n      }\n      if (this.apm && this.apmType) {\n        formatString = formatString.replace(new RegExp(this.apmType, 'g'), this.apm)\n      }\n      return formatString\n    }\n  },\n\n  watch: {\n    'format': 'renderFormat',\n    'minuteInterval': (newInteval) => {\n      this.renderList('minute', newInteval)\n    },\n    'secondInterval': (newInteval) => {\n      this.renderList('second', newInteval)\n    },\n    'timeValue': 'readValues',\n    'displayTime': 'fillValues'\n  },\n\n  methods: {\n    formatValue (type, i) {\n      switch (type) {\n        case 'H':\n        case 'm':\n        case 's':\n          return String(i)\n        case 'HH':\n        case 'mm':\n        case 'ss':\n          return i < 10 ? `0${i}` : String(i)\n        case 'h':\n        case 'k':\n          return String(i + 1)\n        case 'hh':\n        case 'kk':\n          return (i + 1) < 10 ? `0${i + 1}` : String(i + 1)\n        default:\n          return ''\n      }\n    },\n\n    checkAcceptingType (validValues, formatString, fallbackValue) {\n      if (!validValues || !formatString || !formatString.length) { return '' }\n      for (let i = 0; i < validValues.length; i++) {\n        if (formatString.indexOf(validValues[i]) > -1) {\n          return validValues[i]\n        }\n      }\n      return fallbackValue || ''\n    },\n\n    renderFormat (newFormat) {\n      newFormat = newFormat || this.format\n      if (!newFormat || !newFormat.length) {\n        newFormat = 'HH:mm'\n      }\n\n      this.hourType = this.checkAcceptingType(CONFIG.HOUR_TOKENS, newFormat, 'HH')\n      this.minuteType = this.checkAcceptingType(CONFIG.MINUTE_TOKENS, newFormat, 'mm')\n      this.secondType = this.checkAcceptingType(CONFIG.SECOND_TOKENS, newFormat)\n      this.apmType = this.checkAcceptingType(CONFIG.APM_TOKENS, newFormat)\n\n      this.renderHoursList()\n      this.renderList('minute')\n\n      if (this.secondType) {\n        this.renderList('second')\n      }\n\n      if (this.apmType) {\n        this.renderApmList()\n      }\n\n      const self = this\n      this.$nextTick(() => {\n        self.readValues()\n      })\n    },\n\n    renderHoursList () {\n      const hoursCount = (this.hourType === 'h' || this.hourType === 'hh') ? 12 : 24\n      this.hours = []\n      for (let i = 0; i < hoursCount; i++) {\n        this.hours.push(this.formatValue(this.hourType, i))\n      }\n    },\n\n    renderList (listType, interval) {\n      if (listType === 'second') {\n        interval = interval || this.secondInterval\n      } else if (listType === 'minute') {\n        interval = interval || this.minuteInterval\n      } else {\n        return\n      }\n\n      if (interval === 0) {\n        interval = 60\n      } else if (interval > 60) {\n        window.console.warn('`' + listType + '-interval` should be less than 60. Current value is', interval)\n        interval = 1\n      } else if (interval < 1) {\n        window.console.warn('`' + listType + '-interval` should be NO less than 1. Current value is', interval)\n        interval = 1\n      } else if (!interval) {\n        interval = 1\n      }\n\n      if (listType === 'minute') {\n        this.minutes = []\n      } else {\n        this.seconds = []\n      }\n\n      for (let i = 0; i < 60; i += interval) {\n        if (listType === 'minute') {\n          this.minutes.push(this.formatValue(this.minuteType, i))\n        } else {\n          this.seconds.push(this.formatValue(this.secondType, i))\n        }\n      }\n    },\n\n    renderApmList () {\n      this.apms = []\n      if (!this.apmType) { return }\n      this.apms = this.apmType === 'A' ? ['AM', 'PM'] : ['am', 'pm']\n    },\n\n    readValues () {\n      if (!this.timeValue) { return }\n\n      const values = Object.keys(this.timeValue)\n\n      if (values.indexOf(this.hourType) > -1) {\n        this.hour = this.timeValue[this.hourType]\n      }\n\n      if (values.indexOf(this.minuteType) > -1) {\n        this.minute = this.timeValue[this.minuteType]\n      }\n\n      if (values.indexOf(this.secondType) > -1) {\n        this.second = this.timeValue[this.secondType]\n      }\n\n      if (values.indexOf(this.apmType) > -1) {\n        this.apm = this.timeValue[this.apmType]\n      }\n\n      this.fillValues()\n    },\n\n    fillValues () {\n      let fullValues = {}\n\n      const baseHour = this.hour\n      const baseHourType = this.hourType\n\n      const hourValue = Number(baseHour)\n      const baseOnTwelveHours = this.isTwelveHours(baseHourType)\n      const apmValue = this.apm ? String(this.apm).toLowerCase() : false\n\n      CONFIG.HOUR_TOKENS.forEach((token) => {\n        if (token === baseHourType) {\n          fullValues[token] = baseHour\n          return\n        }\n\n        let value\n        let apm\n        switch (token) {\n          case 'H':\n          case 'HH':\n            if (baseOnTwelveHours) {\n              if (apmValue === 'pm') {\n                value = hourValue < 12 ? hourValue + 12 : hourValue\n              } else {\n                value = hourValue % 12\n              }\n            } else {\n              value = hourValue % 24\n            }\n            fullValues[token] = (token === 'HH' && value < 10) ? `0${value}` : String(value)\n            break\n          case 'k':\n          case 'kk':\n            if (baseOnTwelveHours) {\n              if (apmValue === 'pm') {\n                value = hourValue < 12 ? hourValue + 12 : hourValue\n              } else {\n                value = hourValue === 12 ? 24 : hourValue\n              }\n            } else {\n              value = hourValue === 0 ? 24 : hourValue\n            }\n            fullValues[token] = (token === 'kk' && value < 10) ? `0${value}` : String(value)\n            break\n          case 'h':\n          case 'hh':\n            if (apmValue) {\n              value = hourValue\n              apm = apmValue || 'am'\n            } else {\n              if (hourValue > 11) {\n                apm = 'pm'\n                value = hourValue === 12 ? 12 : hourValue % 12\n              } else {\n                apm = 'am'\n                value = hourValue % 12 === 0 ? 12 : hourValue\n              }\n            }\n            fullValues[token] = (token === 'hh' && value < 10) ? `0${value}` : String(value)\n            fullValues.a = apm\n            fullValues.A = apm.toUpperCase()\n            break\n        }\n      })\n\n      const minuteValue = Number(this.minute)\n      fullValues.m = String(minuteValue)\n      fullValues.mm = minuteValue < 10 ? `0${minuteValue}` : String(minuteValue)\n\n      const secondValue = Number(this.second) || 0\n      fullValues.s = String(secondValue)\n      fullValues.ss = secondValue < 10 ? `0${secondValue}` : String(secondValue)\n\n      this.fullValues = fullValues\n\n      this.$dispatch('vue-timepicker-update', fullValues)\n    },\n\n    isTwelveHours (token) {\n      return token === 'h' || token === 'hh'\n    },\n\n    toggleDropdown () {\n      this.showDropdown = !this.showDropdown\n    },\n\n    select (type, value) {\n      if (type === 'hour') {\n        this.hour = value\n      } else if (type === 'minute') {\n        this.minute = value\n      } else if (type === 'second') {\n        this.second = value\n      } else if (type === 'apm') {\n        this.apm = value\n      }\n    },\n\n    showClearBtn () {\n      if ((this.hour && this.hour !== '') || (this.minute && this.minute !== '')) {\n        return true\n      } else {\n        return false\n      }\n    },\n\n    clearTime () {\n      this.hour = ''\n      this.minute = ''\n      this.second = ''\n      this.apm = ''\n    }\n  },\n\n  ready () {\n    this.renderFormat()\n  }\n}\n</script>\n\n<template>\n<span class=\"time-picker\">\n  <input class=\"display-time\" v-model=\"displayTime\" @click=\"toggleDropdown\" type=\"text\" readonly />\n  <span class=\"clear-btn\" v-if=\"!hideClearButton\" v-show=\"!showDropdown && showClearBtn()\" @click=\"clearTime\">&times;</span>\n  <div class=\"time-picker-overlay\" v-if=\"showDropdown\" @click=\"toggleDropdown\"></div>\n  <div class=\"dropdown\" v-show=\"showDropdown\">\n    <div class=\"select-list\">\n      <ul class=\"hours\">\n        <li class=\"hint\" v-text=\"hourType\"></li>\n        <li v-for=\"hr in hours\" v-text=\"hr\" :class=\"{active: hour === hr}\" @click=\"select('hour', hr)\"></li>\n      </ul>\n      <ul class=\"minutes\">\n        <li class=\"hint\" v-text=\"minuteType\"></li>\n        <li v-for=\"m in minutes\" v-text=\"m\" :class=\"{active: minute === m}\" @click=\"select('minute', m)\"></li>\n      </ul>\n      <ul class=\"seconds\" v-if=\"secondType\">\n        <li class=\"hint\" v-text=\"secondType\"></li>\n        <li v-for=\"s in seconds\" v-text=\"s\" :class=\"{active: second === s}\" @click=\"select('second', s)\"></li>\n      </ul>\n      <ul class=\"apms\" v-if=\"apmType\">\n        <li class=\"hint\" v-text=\"apmType\"></li>\n        <li v-for=\"a in apms\" v-text=\"a\" :class=\"{active: apm === a}\" @click=\"select('apm', a)\"></li>\n      </ul>\n    </div>\n  </div>\n</span>\n</template>\n\n<style>\n@import './style/vue-timepicker.css';\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** vue-timepicker.vue?661ac1c2\n **/","module.exports = \" <div class=main-wrapper> <header v-cloak> <h1>Vue Timepicker</h1> <p>A dropdown time picker for Vue.js. With flexible time format support</p> </header> <nav class=top-nav :class=\\\"{stick: scrollTop > 150}\\\"> <span class=title>Vue Timepicker</span> <ul> <li><a @click=\\\"currentView = 'samples'\\\" :class=\\\"{active: currentView === 'samples'}\\\">Common Usage</a></li> <li><a @click=\\\"currentView = 'playground'\\\" :class=\\\"{active: currentView === 'playground'}\\\">Playground</a></li> <li><a href=https://github.com/phoenixwong/vue-timepicker target=_blank>Documentation</a></li> </ul> </nav> <main class=content :class=\\\"{'nav-affixed': scrollTop > 150}\\\"> <component :is=currentView transition=fade transition-mode=out-in></component> </main> </div> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./demo/App.vue\n ** module id = 43\n ** module chunks = 2\n **/","module.exports = \" <section id=playground> <main> <h2 class=section-title>Timepicker Playground</h2> <div id=configPanel> <div class=config-block id=typesSelection> <h3 class=subtitle><a class=anchor>#</a>Generate <code>format</code> string</h3> <div class=config-row> <label class=row-label>Hour:</label> <label class=options v-for=\\\"htype in tokens.hour\\\" :for=\\\"'hour_type' + $index\\\"> <input v-model=type.hour @click=updateHourRange(htype) :value=htype :id=\\\"'hour_type' + $index\\\" type=radio name=hour_type /> {{htype}} </label> </div> <div class=config-row> <label class=row-label>Minute:</label> <label class=options v-for=\\\"mtype in tokens.minute\\\" :for=\\\"'minute_type' + $index\\\"> <input v-model=type.minute :value=mtype :id=\\\"'minute_type' + $index\\\" type=radio name=minute_type /> {{mtype}} </label> </div> <div class=config-row> <label class=row-label>Second:</label> <label class=options v-for=\\\"stype in tokens.second\\\" :for=\\\"'second_type' + $index\\\"> <input v-model=type.second :value=stype :id=\\\"'second_type' + $index\\\" type=radio name=second_type /> {{stype}} </label> </div> <div class=config-row v-if=needApm> <label class=row-label>AM/PM:</label> <label class=options v-for=\\\"atype in tokens.apm\\\" :for=\\\"'apm_type' + $index\\\" :class=\\\"{disabled: disableApmOption}\\\"> <input v-model=type.apm :value=atype :disabled=disableApmOption :id=\\\"'apm_type' + $index\\\" type=radio name=apm_type /> {{atype}} </label> </div> </div> <div class=config-block> <h3 class=subtitle><a class=anchor>#</a>Customized Interval</h3> <div class=\\\"config-row group\\\"> <label> <input v-model=customInterval.minute type=checkbox /> Minute Interval </label> <label v-if=customInterval.minute class=range-wrapper> <input v-model=interval.minute type=range min=0 max=60 step=1 /> <span v-text=interval.minute></span> </label> </div> <div class=\\\"config-row group\\\"> <label> <input v-model=customInterval.second type=checkbox /> Second Interval </label> <label v-if=customInterval.second class=range-wrapper> <input v-model=interval.second type=range min=0 max=60 step=1 /> <span v-text=interval.second></span> </label> </div> </div> <div class=config-block> <h3 class=subtitle><a class=anchor>#</a>Clear Button</h3> <div class=\\\"config-row group\\\"> <label for=enable_btn_true> <input v-model=enableClearBtn type=radio id=enable_btn_true name=enable_btn :value=true /> Enable </label> <label for=enable_btn_false> <input v-model=enableClearBtn type=radio id=enable_btn_false name=enable_btn :value=false /> Disable </label> </div> </div> <div class=codes> <pre data-title=HTML><code v-el:pghtml class=html v-text=htmlCode></code></pre> </div> <div class=config-block id=valuesSelection> <h3 class=subtitle><a class=anchor>#</a>Bind <code>time-value</code> data</h3> <div class=config-row> <label class=row-label>Hour:</label> <label class=options> <input v-model=selected.hour type=range :min=hourRange.min :max=hourRange.max step=1 /> <span v-text=selected.hour></span> </label> </div> <div class=config-row> <label class=row-label>Minute:</label> <label class=options> <input v-model=selected.minute type=range min=0 max=59 :step=interval.minute /> <span v-text=selected.minute></span> </label> </div> <div v-if=\\\"secondType !== 'none'\\\" class=config-row> <label class=row-label>Second:</label> <label class=options> <input v-model=selected.second type=range min=0 max=59 :step=interval.second /> <span v-text=selected.second></span> </label> </div> <div v-if=needApm :class=\\\"{capitailized: type.apm === 'A'}\\\" class=config-row> <label class=row-label>AM/PM:</label> <label class=options for=selected_apm_am> <input v-model=selected.apm type=radio id=selected_apm_am name=selected_apm value=am /> am </label> <label class=options for=selected_apm_pm> <input v-model=selected.apm type=radio id=selected_apm_pm name=selected_apm value=pm /> pm </label> </div> </div> <div class=codes> <pre data-title=JS><code v-el:pgdata class=javascript v-text=yourTimeValue></code></pre> </div> <div class=codes> <pre data-title=HTML><code v-el:pghtmlvar class=html v-text=htmlCodeWithVar></code></pre> </div> </div> </main> <aside class=previews :style=asideStyle()> <div id=playgroundPreview class=preview> <b>Format string: </b> <span v-text=formatString></span> <p> <vue-timepicker :format=formatString :time-value.sync=playgroundData :minute-interval=interval.minute :second-interval=interval.second :hide-clear-button=!enableClearBtn></vue-timepicker> </p> </div> <div id=dispatchedValue class=codes> <pre data-title=vue-timepicker-update><code v-el:pgvalue class=json v-text=\\\"playgroundFullValue | json 2\\\"></code></pre> </div> </aside> </section> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./demo/components/Playground.vue\n ** module id = 44\n ** module chunks = 2\n **/","module.exports = \" <section id=mostlyUsedSamples> <h2 class=section-title>Common Usage</h2> <div class=block> <h3 class=title><a class=anchor id=default>#</a>Default</h3> <div class=description> <p>Default to 24-hour format <code>HH:mm</code></p> </div> <div class=codes> <pre data-title=HTML><code v-el:ugdefault class=html>&lt;vue-timepicker&gt;&lt;/vue-timepicker&gt;</code></pre> </div> <div class=preview> <vue-timepicker></vue-timepicker> </div> </div> <div class=block> <h3 class=title><a class=anchor id=format12hours>#</a>12 Hours</h3> <div class=description> <p>By properly define the <code>format</code> string, you can set timepicker in form of 12 hours</p> </div> <div> <div class=codes> <pre data-title=HTML>\\n<code class=html>&lt;!-- 12-hour sample 1 --&gt;\\n&lt;vue-timepicker format=\\\"hh:mm A\\\"&gt;&lt;/vue-timepicker&gt;\\n\\n&lt;!-- 12-hour sample 2 --&gt;\\n&lt;vue-timepicker format=\\\"h:m a\\\"&gt;&lt;/vue-timepicker&gt;\\n</code>\\n</pre> </div> <div class=preview> <b>12-hour sample 1</b> <p> <vue-timepicker format=\\\"hh:mm A\\\"></vue-timepicker> </p> <b>12-hour sample 2</b> <p> <vue-timepicker format=\\\"h:m a\\\"></vue-timepicker> </p> </div> </div> </div> <div class=block> <h3 class=title><a class=anchor id=seconds>#</a>Seconds Picker</h3> <div class=description> <p>You can trigger the seconds picker by adding <code>ss</code> or <code>s</code> in your format string.</p> </div> <div class=codes> <pre data-title=HTML><code class=html>&lt;vue-timepicker format=\\\"HH:mm:ss\\\"&gt;&lt;/vue-timepicker&gt;</code></pre> </div> <div class=preview> <vue-timepicker format=HH:mm:ss></vue-timepicker> </div> </div> <div class=block> <h3 class=title><a class=anchor id=interval>#</a>Customized Interval</h3> <div class=description> <p>Timepicker also allows you to display minutes or seconds picker with certain interval, like a 10-minute interval <code>0, 10, 20, ... 50, 60</code> for example</p> </div> <div class=codes> <pre data-title=HTML>\\n<code class=html>&lt;!-- 10-minute interval --&gt;\\n&lt;vue-timepicker :minute-interval=\\\"10\\\"&gt;&lt;/vue-timepicker&gt;\\n\\n&lt;!-- 15-second interval --&gt;\\n&lt;vue-timepicker format=\\\"HH:mm:ss\\\" :second-interval=\\\"15\\\"&gt;&lt;/vue-timepicker&gt;\\n\\n&lt;!-- 5-minute interval plus 10-second interval --&gt;\\n&lt;vue-timepicker format=\\\"hh:mm:ss\\\" :minute-interval=\\\"5\\\" :second-interval=\\\"10\\\"&gt;&lt;/vue-timepicker&gt;\\n</code>\\n</pre> </div> <div class=preview> <b>10-minute interval</b> <p> <vue-timepicker :minute-interval=10></vue-timepicker> </p> <b>15-second interval</b> <p> <vue-timepicker format=HH:mm:ss :second-interval=15></vue-timepicker> </p> <b>5-minute interval plus 10-second interval</b> <p> <vue-timepicker format=hh:mm:ss :minute-interval=5 :second-interval=10></vue-timepicker> </p> </div> </div> <div class=block> <h3 class=title><a class=anchor id=sync>#</a>Sync Data</h3> <div class=description> <p>Manipulate your timepicker's data as usual</p> </div> <div class=codes> <pre data-title=JS><code class=javascript>data: {\\n  yourFormat: 'hh:mm:ss a',\\n  yourData: {\\n    hh: '03',\\n    mm: '10',\\n    ss: '00',\\n    a: 'am'\\n  }\\n}</code></pre> </div> <div class=codes> <pre data-title=HTML><code class=html>&lt;vue-timepicker :format=\\\"yourFormat\\\" :time-value.sync=\\\"yourData\\\"&gt;&lt;/vue-timepicker&gt;</code></pre> </div> <div> <div class=preview> <vue-timepicker :format=yourFormat :time-value.sync=yourData></vue-timepicker> </div> </div> </div> <div class=block> <h3 class=title><a class=anchor id=hideClearButton>#</a>Hide Clear Button</h3> <div class=description> <p>If you don't want to expose the clear button in the UI, <code>hide-clear-button</code> property will do the trick.</p> </div> <div class=codes> <pre data-title=HTML><code class=html>&lt;vue-timepicker hide-clear-button&gt;&lt;/vue-timepicker&gt;</code></pre> </div> <div class=preview> <vue-timepicker hide-clear-button></vue-timepicker> </div> </div> <div class=block> <h3 class=title><a class=anchor id=more>#</a>More complex usage</h3> <div class=description> <p>Didn't find what you need? Please check the <a>Playground</a> or <a href=https://github.com/phoenixwong/vue-timepicker target=_blank>Documentation</a> for more inspiration.</p> </div> </div> </section> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./demo/components/Samples.vue\n ** module id = 45\n ** module chunks = 2\n **/","module.exports = \" <span class=time-picker> <input class=display-time v-model=displayTime @click=toggleDropdown type=text readonly=readonly /> <span class=clear-btn v-if=!hideClearButton v-show=\\\"!showDropdown && showClearBtn()\\\" @click=clearTime>&times;</span> <div class=time-picker-overlay v-if=showDropdown @click=toggleDropdown></div> <div class=dropdown v-show=showDropdown> <div class=select-list> <ul class=hours> <li class=hint v-text=hourType></li> <li v-for=\\\"hr in hours\\\" v-text=hr :class=\\\"{active: hour === hr}\\\" @click=\\\"select('hour', hr)\\\"></li> </ul> <ul class=minutes> <li class=hint v-text=minuteType></li> <li v-for=\\\"m in minutes\\\" v-text=m :class=\\\"{active: minute === m}\\\" @click=\\\"select('minute', m)\\\"></li> </ul> <ul class=seconds v-if=secondType> <li class=hint v-text=secondType></li> <li v-for=\\\"s in seconds\\\" v-text=s :class=\\\"{active: second === s}\\\" @click=\\\"select('second', s)\\\"></li> </ul> <ul class=apms v-if=apmType> <li class=hint v-text=apmType></li> <li v-for=\\\"a in apms\\\" v-text=a :class=\\\"{active: apm === a}\\\" @click=\\\"select('apm', a)\\\"></li> </ul> </div> </div> </span> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/vue-timepicker.vue\n ** module id = 46\n ** module chunks = 2\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../node_modules/vue-loader/lib/style-rewriter.js!sass-loader?indentedSyntax&sourceMap!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./App.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../node_modules/vue-loader/lib/selector.js?type=script&index=0!./App.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../node_modules/vue-loader/lib/selector.js?type=template&index=0!./App.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./demo/App.vue\n ** module id = 47\n ** module chunks = 2\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Playground.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Playground.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./demo/components/Playground.vue\n ** module id = 48\n ** module chunks = 2\n **/","var __vue_script__, __vue_template__\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Samples.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Samples.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./demo/components/Samples.vue\n ** module id = 49\n ** module chunks = 2\n **/"],"sourceRoot":""}